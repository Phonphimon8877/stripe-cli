{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Stripe API v2",
    "description" : "The v2 endpoints of the Stripe REST API. Please see https://stripe.com/docs/api for more\n    details.",
    "termsOfService" : "https://stripe.com/us/terms/",
    "contact" : {
      "name" : "Stripe Dev Platform Team",
      "url" : "https://stripe.com",
      "email" : "dev-platform@stripe.com"
    },
    "version" : "2025-02-24.acacia",
    "x-stripeSpecFilename" : "spec3.v2.sdk"
  },
  "servers" : [ {
    "url" : "https://api.stripe.com/"
  } ],
  "security" : [ {
    "basicAuth" : [ ],
    "bearerAuth" : [ ]
  } ],
  "paths" : {
    "/v2/core/events/{id}" : {
      "get" : {
        "description" : "Retrieves the details of an event.",
        "operationId" : "GetCoreEventsId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier for the object.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.core.event"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeErrors" : [ {
          "code" : "not_found",
          "description" : "The resource wasn't found.",
          "httpStatusCode" : 404
        } ]
      }
    },
    "/v2/billing/meter_event_session" : {
      "post" : {
        "description" : "Creates a meter event session to send usage on the high-throughput meter event stream. Authentication tokens are only valid for 15 minutes, so you will need to create a new meter event session when your token expires.",
        "operationId" : "PostBillingMeterEventSession",
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.billing.meter_event_session"
                }
              }
            }
          }
        }
      }
    },
    "/v2/core/event_destinations/{id}/enable" : {
      "post" : {
        "description" : "Enable an event destination.",
        "operationId" : "PostCoreEventDestinationsIdEnable",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Identifier for the event destination to enable.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.core.event_destination"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.idempotency_error"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeErrors" : [ {
          "code" : "idempotency_error",
          "description" : "An idempotent retry occurred with different request parameters.",
          "httpStatusCode" : 409
        }, {
          "code" : "not_found",
          "description" : "The resource wasn't found.",
          "httpStatusCode" : 404
        } ]
      }
    },
    "/v2/core/event_destinations/{id}/disable" : {
      "post" : {
        "description" : "Disable an event destination.",
        "operationId" : "PostCoreEventDestinationsIdDisable",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Identifier for the event destination to disable.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.core.event_destination"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.idempotency_error"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeErrors" : [ {
          "code" : "idempotency_error",
          "description" : "An idempotent retry occurred with different request parameters.",
          "httpStatusCode" : 409
        }, {
          "code" : "not_found",
          "description" : "The resource wasn't found.",
          "httpStatusCode" : 404
        } ]
      }
    },
    "/v2/billing/meter_event_adjustments" : {
      "post" : {
        "description" : "Creates a meter event adjustment to cancel a previously sent meter event.",
        "operationId" : "PostBillingMeterEventAdjustments",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "cancel", "event_name", "type" ],
                "type" : "object",
                "properties" : {
                  "cancel" : {
                    "required" : [ "identifier" ],
                    "type" : "object",
                    "properties" : {
                      "identifier" : {
                        "type" : "string",
                        "description" : "Unique identifier for the event. You can only cancel events within 24 hours of Stripe receiving them."
                      }
                    },
                    "description" : "Specifies which event to cancel."
                  },
                  "event_name" : {
                    "type" : "string",
                    "description" : "The name of the meter event. Corresponds with the `event_name` field on a meter."
                  },
                  "type" : {
                    "type" : "string",
                    "description" : "Specifies whether to cancel a single event or a range of events for a time period. Time period cancellation is not supported yet.",
                    "enum" : [ "cancel" ]
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.billing.meter_event_adjustment"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.invalid_cancel_configuration"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeErrors" : [ {
          "code" : "invalid_cancel_configuration",
          "description" : "The adjustment configuration is invalid for the adjustment type.",
          "httpStatusCode" : 400
        } ]
      }
    },
    "/v2/core/event_destinations/{id}/ping" : {
      "post" : {
        "description" : "Send a `ping` event to an event destination.",
        "operationId" : "PostCoreEventDestinationsIdPing",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Identifier for the event destination to ping.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.core.event"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeErrors" : [ {
          "code" : "not_found",
          "description" : "The resource wasn't found.",
          "httpStatusCode" : 404
        } ]
      }
    },
    "/v2/core/event_destinations" : {
      "get" : {
        "description" : "Lists all event destinations.",
        "operationId" : "GetCoreEventDestinations",
        "parameters" : [ {
          "name" : "include",
          "in" : "query",
          "description" : "Additional fields to include in the response. Currently supports `webhook_endpoint.url`.",
          "required" : false,
          "style" : "deepObject",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "webhook_endpoint.url" ]
            }
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The page size.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The requested page.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "data", "next_page_url", "previous_page_url" ],
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "description" : "List of resources.",
                      "items" : {
                        "$ref" : "#/components/schemas/v2.core.event_destination"
                      }
                    },
                    "next_page_url" : {
                      "type" : "string",
                      "description" : "URL to fetch the next page of the list. If there are no more pages, the value is null.",
                      "nullable" : true
                    },
                    "previous_page_url" : {
                      "type" : "string",
                      "description" : "URL to fetch the previous page of the list. If there are no previous pages, the value is null.",
                      "nullable" : true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Create a new event destination.",
        "operationId" : "PostCoreEventDestinations",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "enabled_events", "event_payload", "name", "type" ],
                "type" : "object",
                "properties" : {
                  "description" : {
                    "type" : "string",
                    "description" : "An optional description of what the event destination is used for."
                  },
                  "enabled_events" : {
                    "type" : "array",
                    "description" : "The list of events to enable for this endpoint.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "enumeratively_enabled_all_events_during_creation" : {
                    "type" : "boolean",
                    "description" : "Internal field to track if all available events were selected during creation.\nWe do not allow wildcards (e.g., \"*\") to subscribe to all events in v2.\nThis field helps maintain compatibility with the existing dashboard functionality that allows selecting all events.",
                    "x-stripeNotPublic" : true
                  },
                  "event_payload" : {
                    "type" : "string",
                    "description" : "Payload type of events being subscribed to.",
                    "enum" : [ "snapshot", "thin" ]
                  },
                  "events_from" : {
                    "type" : "array",
                    "description" : "Where events should be routed from.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "other_accounts", "self" ]
                    }
                  },
                  "include" : {
                    "type" : "array",
                    "description" : "Additional fields to include in the response.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "webhook_endpoint.signing_secret", "webhook_endpoint.url" ]
                    }
                  },
                  "metadata" : {
                    "type" : "object",
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "Metadata."
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "Event destination name."
                  },
                  "snapshot_api_version" : {
                    "type" : "string",
                    "description" : "If using the snapshot event payload, the API version events are rendered as."
                  },
                  "type" : {
                    "type" : "string",
                    "description" : "Event destination type.",
                    "enum" : [ "amazon_eventbridge", "reverse_api", "webhook_endpoint" ]
                  },
                  "amazon_eventbridge" : {
                    "required" : [ "aws_account_id", "aws_region" ],
                    "type" : "object",
                    "properties" : {
                      "aws_account_id" : {
                        "type" : "string",
                        "description" : "The AWS account ID."
                      },
                      "aws_region" : {
                        "type" : "string",
                        "description" : "The region of the AWS event source."
                      }
                    },
                    "description" : "Amazon EventBridge configuration."
                  },
                  "reverse_api" : {
                    "required" : [ "url" ],
                    "type" : "object",
                    "properties" : {
                      "url" : {
                        "type" : "string",
                        "description" : "The URL of the webhook endpoint."
                      }
                    },
                    "description" : "Reverse API configuration.",
                    "x-stripeNotPublic" : true
                  },
                  "webhook_endpoint" : {
                    "required" : [ "url" ],
                    "type" : "object",
                    "properties" : {
                      "url" : {
                        "type" : "string",
                        "description" : "The URL of the webhook endpoint."
                      }
                    },
                    "description" : "Webhook endpoint configuration."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.core.event_destination"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.idempotency_error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeErrors" : [ {
          "code" : "idempotency_error",
          "description" : "An idempotent retry occurred with different request parameters.",
          "httpStatusCode" : 409
        } ]
      }
    },
    "/v2/billing/meter_events" : {
      "post" : {
        "description" : "Creates a meter event. Events are validated synchronously, but are processed asynchronously. Supports up to 1,000 events per second in livemode. For higher rate-limits, please use meter event streams instead.",
        "operationId" : "PostBillingMeterEvents",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "event_name", "payload" ],
                "type" : "object",
                "properties" : {
                  "event_name" : {
                    "type" : "string",
                    "description" : "The name of the meter event. Corresponds with the `event_name` field on a meter."
                  },
                  "identifier" : {
                    "type" : "string",
                    "description" : "A unique identifier for the event. If not provided, one will be generated.\nWe recommend using a globally unique identifier for this. We’ll enforce\nuniqueness within a rolling 24 hour period."
                  },
                  "payload" : {
                    "type" : "object",
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "The payload of the event. This must contain the fields corresponding to a meter’s\n`customer_mapping.event_payload_key` (default is `stripe_customer_id`) and\n`value_settings.event_payload_key` (default is `value`). Read more about\nthe\n[payload](https://docs.stripe.com/billing/subscriptions/usage-based/recording-usage#payload-key-overrides)."
                  },
                  "timestamp" : {
                    "type" : "string",
                    "description" : "The time of the event. Must be within the past 35 calendar days or up to\n5 minutes in the future. Defaults to current timestamp if not specified.",
                    "format" : "date-time"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.billing.meter_event"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.archived_meter"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.duplicate_meter_event"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.no_meter"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.payload_invalid_value"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.payload_no_customer_defined"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.payload_no_value_defined"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.too_many_concurrent_requests"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeErrors" : [ {
          "code" : "archived_meter",
          "description" : "The meter must be Active to submit events.",
          "httpStatusCode" : 400
        }, {
          "code" : "duplicate_meter_event",
          "description" : "A meter event with a duplicate identifier has already been submitted.",
          "httpStatusCode" : 400
        }, {
          "code" : "no_meter",
          "description" : "A meter must exist to submit events.",
          "httpStatusCode" : 400
        }, {
          "code" : "payload_invalid_value",
          "description" : "The value must be a positive integer.",
          "httpStatusCode" : 400
        }, {
          "code" : "payload_no_customer_defined",
          "description" : "The payload must have a reference to the customer.",
          "httpStatusCode" : 400
        }, {
          "code" : "payload_no_value_defined",
          "description" : "The payload must have a value.",
          "httpStatusCode" : 400
        }, {
          "code" : "too_many_concurrent_requests",
          "description" : "Used to return 409s from the v2 synchronous endpoints in case of mongo write conflicts.\nThis is intentionally not a 429 per the guidance of #api-pattern-review-team.",
          "httpStatusCode" : 409
        } ]
      }
    },
    "/v2/billing/meter_event_stream" : {
      "post" : {
        "description" : "Creates meter events. Events are processed asynchronously, including validation. Requires a meter event session for authentication. Supports up to 10,000 requests per second in livemode. For even higher rate-limits, contact sales.",
        "operationId" : "PostBillingMeterEventStream",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "events" ],
                "type" : "object",
                "properties" : {
                  "events" : {
                    "type" : "array",
                    "description" : "List of meter events to include in the request.",
                    "items" : {
                      "required" : [ "event_name", "payload" ],
                      "type" : "object",
                      "properties" : {
                        "event_name" : {
                          "type" : "string",
                          "description" : "The name of the meter event. Corresponds with the `event_name` field on a meter."
                        },
                        "identifier" : {
                          "type" : "string",
                          "description" : "A unique identifier for the event. If not provided, one will be generated.\nWe recommend using a globally unique identifier for this. We’ll enforce\nuniqueness within a rolling 24 hour period."
                        },
                        "payload" : {
                          "type" : "object",
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "description" : "The payload of the event. This must contain the fields corresponding to a meter’s\n`customer_mapping.event_payload_key` (default is `stripe_customer_id`) and\n`value_settings.event_payload_key` (default is `value`). Read more about\nthe\n[payload](https://docs.stripe.com/billing/subscriptions/usage-based/recording-usage#payload-key-overrides)."
                        },
                        "timestamp" : {
                          "type" : "string",
                          "description" : "The time of the event. Must be within the past 35 calendar days or up to\n5 minutes in the future. Defaults to current timestamp if not specified.",
                          "format" : "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : { }
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.billing_meter_event_session_expired"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeErrors" : [ {
          "code" : "billing_meter_event_session_expired",
          "description" : "The temporary session token has expired.",
          "type" : "temporary_session_expired",
          "httpStatusCode" : 401
        } ]
      }
    },
    "/v2/core/events" : {
      "get" : {
        "description" : "List events, going back up to 30 days.",
        "operationId" : "GetCoreEvents",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The page size.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "object_id",
          "in" : "query",
          "description" : "Primary object ID used to retrieve related events.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The requested page.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "data", "next_page_url", "previous_page_url" ],
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "description" : "List of resources.",
                      "items" : {
                        "$ref" : "#/components/schemas/v2.core.event"
                      }
                    },
                    "next_page_url" : {
                      "type" : "string",
                      "description" : "URL to fetch the next page of the list. If there are no more pages, the value is null.",
                      "nullable" : true
                    },
                    "previous_page_url" : {
                      "type" : "string",
                      "description" : "URL to fetch the previous page of the list. If there are no previous pages, the value is null.",
                      "nullable" : true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/core/event_destinations/{id}" : {
      "get" : {
        "description" : "Retrieves the details of an event destination.",
        "operationId" : "GetCoreEventDestinationsId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Identifier for the event destination to retrieve.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Additional fields to include in the response.",
          "required" : false,
          "style" : "deepObject",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "webhook_endpoint.url" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.core.event_destination"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeErrors" : [ {
          "code" : "not_found",
          "description" : "The resource wasn't found.",
          "httpStatusCode" : 404
        } ]
      },
      "post" : {
        "description" : "Update the details of an event destination.",
        "operationId" : "PostCoreEventDestinationsId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Identifier for the event destination to update.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "description" : {
                    "type" : "string",
                    "description" : "An optional description of what the event destination is used for."
                  },
                  "enabled_events" : {
                    "type" : "array",
                    "description" : "The list of events to enable for this endpoint.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "include" : {
                    "type" : "array",
                    "description" : "Additional fields to include in the response. Currently supports `webhook_endpoint.url`.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "webhook_endpoint.url" ]
                    }
                  },
                  "metadata" : {
                    "type" : "object",
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "Metadata."
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "Event destination name."
                  },
                  "webhook_endpoint" : {
                    "required" : [ "url" ],
                    "type" : "object",
                    "properties" : {
                      "url" : {
                        "type" : "string",
                        "description" : "The URL of the webhook endpoint."
                      }
                    },
                    "description" : "Webhook endpoint configuration."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.core.event_destination"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.idempotency_error"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeErrors" : [ {
          "code" : "idempotency_error",
          "description" : "An idempotent retry occurred with different request parameters.",
          "httpStatusCode" : 409
        }, {
          "code" : "not_found",
          "description" : "The resource wasn't found.",
          "httpStatusCode" : 404
        } ]
      },
      "delete" : {
        "description" : "Delete an event destination.",
        "operationId" : "DeleteCoreEventDestinationsId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Identifier for the event destination to delete.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.idempotency_error"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeErrors" : [ {
          "code" : "idempotency_error",
          "description" : "An idempotent retry occurred with different request parameters.",
          "httpStatusCode" : 409
        }, {
          "code" : "not_found",
          "description" : "The resource wasn't found.",
          "httpStatusCode" : 404
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "v1.billing.meter.error_report_triggered" : {
        "required" : [ "data", "related_object", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "required" : [ "developer_message_summary", "reason", "validation_end", "validation_start" ],
            "type" : "object",
            "properties" : {
              "reason" : {
                "required" : [ "error_count", "error_types" ],
                "type" : "object",
                "properties" : {
                  "error_count" : {
                    "type" : "integer",
                    "description" : "The total error count within this window."
                  },
                  "error_types" : {
                    "type" : "array",
                    "description" : "The error details.",
                    "items" : {
                      "required" : [ "code", "error_count", "sample_errors" ],
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Open Enum.",
                          "enum" : [ "archived_meter", "meter_event_customer_not_found", "meter_event_dimension_count_too_high", "meter_event_invalid_value", "meter_event_no_customer_defined", "missing_dimension_payload_keys", "no_meter", "timestamp_in_future", "timestamp_too_far_in_past" ]
                        },
                        "error_count" : {
                          "type" : "integer",
                          "description" : "The number of errors of this type."
                        },
                        "sample_errors" : {
                          "type" : "array",
                          "description" : "A list of sample errors of this type.",
                          "items" : {
                            "required" : [ "error_message", "request" ],
                            "type" : "object",
                            "properties" : {
                              "error_message" : {
                                "type" : "string",
                                "description" : "The error message."
                              },
                              "request" : {
                                "required" : [ "identifier" ],
                                "type" : "object",
                                "properties" : {
                                  "identifier" : {
                                    "type" : "string",
                                    "description" : "The request idempotency key."
                                  }
                                },
                                "description" : "The request causes the error."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "description" : "This contains information about why meter error happens."
              },
              "developer_message_summary" : {
                "type" : "string",
                "description" : "Extra field included in the event's `data` when fetched from /v2/events."
              },
              "validation_start" : {
                "type" : "string",
                "description" : "The start of the window that is encapsulated by this summary.",
                "format" : "date-time"
              },
              "validation_end" : {
                "type" : "string",
                "description" : "The end of the window that is encapsulated by this summary.",
                "format" : "date-time"
              }
            },
            "description" : "Additional data about the event."
          },
          "related_object" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Object tag of the resource relevant to the event.",
                "enum" : [ "billing.meter" ]
              }
            },
            "description" : "Object containing the reference to API resource relevant to the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "v1.billing.meter.error_report_triggered" ]
          }
        },
        "description" : "This event occurs when there are invalid async usage events for a given meter.",
        "x-stripeEvent" : {
          "kind" : "thin",
          "type" : "v1.billing.meter.error_report_triggered"
        }
      },
      "v1.billing.meter.no_meter_found" : {
        "required" : [ "data", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "required" : [ "developer_message_summary", "reason", "validation_end", "validation_start" ],
            "type" : "object",
            "properties" : {
              "reason" : {
                "required" : [ "error_count", "error_types" ],
                "type" : "object",
                "properties" : {
                  "error_count" : {
                    "type" : "integer",
                    "description" : "The total error count within this window."
                  },
                  "error_types" : {
                    "type" : "array",
                    "description" : "The error details.",
                    "items" : {
                      "required" : [ "code", "error_count", "sample_errors" ],
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Open Enum.",
                          "enum" : [ "archived_meter", "meter_event_customer_not_found", "meter_event_dimension_count_too_high", "meter_event_invalid_value", "meter_event_no_customer_defined", "missing_dimension_payload_keys", "no_meter", "timestamp_in_future", "timestamp_too_far_in_past" ]
                        },
                        "error_count" : {
                          "type" : "integer",
                          "description" : "The number of errors of this type."
                        },
                        "sample_errors" : {
                          "type" : "array",
                          "description" : "A list of sample errors of this type.",
                          "items" : {
                            "required" : [ "error_message", "request" ],
                            "type" : "object",
                            "properties" : {
                              "error_message" : {
                                "type" : "string",
                                "description" : "The error message."
                              },
                              "request" : {
                                "required" : [ "identifier" ],
                                "type" : "object",
                                "properties" : {
                                  "identifier" : {
                                    "type" : "string",
                                    "description" : "The request idempotency key."
                                  }
                                },
                                "description" : "The request causes the error."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "description" : "This contains information about why meter error happens."
              },
              "developer_message_summary" : {
                "type" : "string",
                "description" : "Extra field included in the event's `data` when fetched from /v2/events."
              },
              "validation_start" : {
                "type" : "string",
                "description" : "The start of the window that is encapsulated by this summary.",
                "format" : "date-time"
              },
              "validation_end" : {
                "type" : "string",
                "description" : "The end of the window that is encapsulated by this summary.",
                "format" : "date-time"
              }
            },
            "description" : "Additional data about the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "v1.billing.meter.no_meter_found" ]
          }
        },
        "description" : "This event occurs when async usage events have missing or invalid meter ids.",
        "x-stripeEvent" : {
          "kind" : "thin",
          "type" : "v1.billing.meter.no_meter_found"
        }
      },
      "v2.billing.meter_event" : {
        "required" : [ "created", "event_name", "identifier", "livemode", "object", "payload", "timestamp" ],
        "type" : "object",
        "properties" : {
          "created" : {
            "type" : "string",
            "description" : "The creation time of this meter event.",
            "format" : "date-time"
          },
          "event_name" : {
            "type" : "string",
            "description" : "The name of the meter event. Corresponds with the `event_name` field on a meter."
          },
          "identifier" : {
            "type" : "string",
            "description" : "A unique identifier for the event. If not provided, one will be generated. We recommend using a globally unique identifier for this. We’ll enforce uniqueness within a rolling 24 hour period."
          },
          "livemode" : {
            "type" : "boolean",
            "description" : "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode."
          },
          "object" : {
            "type" : "string",
            "description" : "String representing the object's type. Objects of the same type share the same value of the object field.",
            "enum" : [ "v2.billing.meter_event" ]
          },
          "payload" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The payload of the event. This must contain the fields corresponding to a meter’s\n`customer_mapping.event_payload_key` (default is `stripe_customer_id`) and\n`value_settings.event_payload_key` (default is `value`). Read more about the payload."
          },
          "timestamp" : {
            "type" : "string",
            "description" : "The time of the event. Must be within the past 35 calendar days or up to\n5 minutes in the future. Defaults to current timestamp if not specified.",
            "format" : "date-time"
          }
        },
        "description" : "Fix me empty_doc_string.",
        "x-resourceId" : "v2.billing.meter_event",
        "x-stripeResource" : {
          "in_package" : "v2.billing",
          "class_name" : "MeterEvent"
        },
        "x-stripeOperations" : [ {
          "method_name" : "create",
          "method_on" : "service",
          "method_type" : "create",
          "operation" : "post",
          "path" : "/v2/billing/meter_events"
        } ]
      },
      "v2.billing.meter_event_adjustment" : {
        "required" : [ "cancel", "created", "event_name", "id", "livemode", "object", "status", "type" ],
        "type" : "object",
        "properties" : {
          "cancel" : {
            "required" : [ "identifier" ],
            "type" : "object",
            "properties" : {
              "identifier" : {
                "type" : "string",
                "description" : "Unique identifier for the event. You can only cancel events within 24 hours of Stripe receiving them."
              }
            },
            "description" : "Specifies which event to cancel."
          },
          "created" : {
            "type" : "string",
            "description" : "The time the adjustment was created.",
            "format" : "date-time"
          },
          "event_name" : {
            "type" : "string",
            "description" : "The name of the meter event. Corresponds with the `event_name` field on a meter."
          },
          "id" : {
            "type" : "string",
            "description" : "The unique id of this meter event adjustment."
          },
          "livemode" : {
            "type" : "boolean",
            "description" : "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode."
          },
          "object" : {
            "type" : "string",
            "description" : "String representing the object's type. Objects of the same type share the same value of the object field.",
            "enum" : [ "v2.billing.meter_event_adjustment" ]
          },
          "status" : {
            "type" : "string",
            "description" : "Open Enum. The meter event adjustment’s status.",
            "enum" : [ "complete", "pending" ]
          },
          "type" : {
            "type" : "string",
            "description" : "Open Enum. Specifies whether to cancel a single event or a range of events for a time period. Time period cancellation is not supported yet.",
            "enum" : [ "cancel" ]
          }
        },
        "x-resourceId" : "v2.billing.meter_event_adjustment",
        "x-stripeResource" : {
          "in_package" : "v2.billing",
          "class_name" : "MeterEventAdjustment"
        },
        "x-stripeOperations" : [ {
          "method_name" : "create",
          "method_on" : "service",
          "method_type" : "create",
          "operation" : "post",
          "path" : "/v2/billing/meter_event_adjustments"
        } ]
      },
      "v2.billing.meter_event_session" : {
        "required" : [ "authentication_token", "created", "expires_at", "id", "livemode", "object" ],
        "type" : "object",
        "properties" : {
          "authentication_token" : {
            "type" : "string",
            "description" : "The authentication token for this session.  Use this token when calling the\nhigh-throughput meter event API."
          },
          "created" : {
            "type" : "string",
            "description" : "The creation time of this session.",
            "format" : "date-time"
          },
          "expires_at" : {
            "type" : "string",
            "description" : "The time at which this session will expire.",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string",
            "description" : "The unique id of this auth session."
          },
          "livemode" : {
            "type" : "boolean",
            "description" : "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode."
          },
          "object" : {
            "type" : "string",
            "description" : "String representing the object's type. Objects of the same type share the same value of the object field.",
            "enum" : [ "v2.billing.meter_event_session" ]
          }
        },
        "x-resourceId" : "v2.billing.meter_event_session",
        "x-stripeResource" : {
          "in_package" : "v2.billing",
          "class_name" : "MeterEventSession"
        },
        "x-stripeOperations" : [ {
          "method_name" : "create",
          "method_on" : "service",
          "method_type" : "create",
          "operation" : "post",
          "path" : "/v2/billing/meter_event_session"
        } ]
      },
      "v2.core.event" : {
        "required" : [ "created", "id", "livemode", "object", "type" ],
        "type" : "object",
        "properties" : {
          "changes" : {
            "description" : "Before and after changes for the primary related object.",
            "x-stripeNotPublic" : true
          },
          "context" : {
            "type" : "string",
            "description" : "Authentication context needed to fetch the event or related object."
          },
          "created" : {
            "type" : "string",
            "description" : "Time at which the object was created.",
            "format" : "date-time"
          },
          "data" : {
            "description" : "Additional data about the event."
          },
          "id" : {
            "type" : "string",
            "description" : "Unique identifier for the event."
          },
          "livemode" : {
            "type" : "boolean",
            "description" : "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode."
          },
          "object" : {
            "type" : "string",
            "description" : "String representing the object's type. Objects of the same type share the same value of the object field.",
            "enum" : [ "v2.core.event" ]
          },
          "reason" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Event reason type.",
                "enum" : [ "request" ]
              },
              "request" : {
                "required" : [ "id", "idempotency_key" ],
                "type" : "object",
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "ID of the API request that caused the event."
                  },
                  "idempotency_key" : {
                    "type" : "string",
                    "description" : "The idempotency key transmitted during the request."
                  }
                },
                "description" : "Information on the API request that instigated the event."
              }
            },
            "description" : "Reason for the event."
          },
          "related_object" : {
            "required" : [ "id", "type", "url" ],
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Unique identifier for the object relevant to the event."
              },
              "type" : {
                "type" : "string",
                "description" : "Object tag of the resource relevant to the event."
              },
              "url" : {
                "type" : "string",
                "description" : "URL to retrieve the resource."
              }
            },
            "description" : "Object containing the reference to API resource relevant to the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event."
          }
        },
        "x-resourceId" : "v2.core.event",
        "x-stripeResource" : {
          "in_package" : "v2.core",
          "class_name" : "Event"
        },
        "x-stripeOperations" : [ {
          "method_name" : "ping",
          "method_on" : "service",
          "method_type" : "custom",
          "operation" : "post",
          "path" : "/v2/core/event_destinations/{id}/ping"
        }, {
          "method_name" : "list",
          "method_on" : "service",
          "method_type" : "list",
          "operation" : "get",
          "path" : "/v2/core/events"
        }, {
          "method_name" : "retrieve",
          "method_on" : "service",
          "method_type" : "retrieve",
          "operation" : "get",
          "path" : "/v2/core/events/{id}"
        } ]
      },
      "v2.core.event_destination" : {
        "required" : [ "created", "description", "enabled_events", "event_payload", "id", "livemode", "name", "object", "status", "type", "updated" ],
        "type" : "object",
        "properties" : {
          "created" : {
            "type" : "string",
            "description" : "Time at which the object was created.",
            "format" : "date-time"
          },
          "description" : {
            "type" : "string",
            "description" : "An optional description of what the event destination is used for."
          },
          "enabled_events" : {
            "type" : "array",
            "description" : "The list of events to enable for this endpoint.",
            "items" : {
              "type" : "string"
            }
          },
          "event_payload" : {
            "type" : "string",
            "description" : "Payload type of events being subscribed to.",
            "enum" : [ "snapshot", "thin" ]
          },
          "events_from" : {
            "type" : "array",
            "description" : "Where events should be routed from.",
            "items" : {
              "type" : "string",
              "enum" : [ "other_accounts", "self" ]
            }
          },
          "id" : {
            "type" : "string",
            "description" : "Unique identifier for the object."
          },
          "livemode" : {
            "type" : "boolean",
            "description" : "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode."
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Metadata."
          },
          "name" : {
            "type" : "string",
            "description" : "Event destination name."
          },
          "object" : {
            "type" : "string",
            "description" : "String representing the object's type. Objects of the same type share the same value of the object field.",
            "enum" : [ "v2.core.event_destination" ]
          },
          "snapshot_api_version" : {
            "type" : "string",
            "description" : "If using the snapshot event payload, the API version events are rendered as."
          },
          "status" : {
            "type" : "string",
            "description" : "Status. It can be set to either enabled or disabled.",
            "enum" : [ "disabled", "enabled" ]
          },
          "status_details" : {
            "type" : "object",
            "properties" : {
              "disabled" : {
                "required" : [ "reason" ],
                "type" : "object",
                "properties" : {
                  "reason" : {
                    "type" : "string",
                    "description" : "Reason event destination has been disabled.",
                    "enum" : [ "no_aws_event_source_exists", "user" ]
                  }
                },
                "description" : "Details about why the event destination has been disabled."
              }
            },
            "description" : "Additional information about event destination status."
          },
          "type" : {
            "type" : "string",
            "description" : "Event destination type.",
            "enum" : [ "amazon_eventbridge", "reverse_api", "webhook_endpoint" ]
          },
          "updated" : {
            "type" : "string",
            "description" : "Time at which the object was last updated.",
            "format" : "date-time"
          },
          "amazon_eventbridge" : {
            "required" : [ "aws_account_id", "aws_event_source_arn", "aws_event_source_status" ],
            "type" : "object",
            "properties" : {
              "aws_account_id" : {
                "type" : "string",
                "description" : "The AWS account ID."
              },
              "aws_event_source_arn" : {
                "type" : "string",
                "description" : "The ARN of the AWS event source."
              },
              "aws_event_source_status" : {
                "type" : "string",
                "description" : "The state of the AWS event source.",
                "enum" : [ "active", "deleted", "pending", "unknown" ]
              }
            },
            "description" : "Amazon EventBridge configuration."
          },
          "reverse_api" : {
            "required" : [ "url" ],
            "type" : "object",
            "properties" : {
              "url" : {
                "type" : "string",
                "description" : "The URL of the webhook endpoint."
              }
            },
            "description" : "Reverse API configuration.",
            "x-stripeNotPublic" : true
          },
          "webhook_endpoint" : {
            "type" : "object",
            "properties" : {
              "signing_secret" : {
                "type" : "string",
                "description" : "The signing secret of the webhook endpoint, only includable on creation."
              },
              "url" : {
                "type" : "string",
                "description" : "The URL of the webhook endpoint, includable."
              }
            },
            "description" : "Webhook endpoint configuration."
          }
        },
        "x-resourceId" : "v2.core.event_destination",
        "x-stripeResource" : {
          "in_package" : "v2.core",
          "class_name" : "EventDestination"
        },
        "x-stripeOperations" : [ {
          "method_name" : "list",
          "method_on" : "service",
          "method_type" : "list",
          "operation" : "get",
          "path" : "/v2/core/event_destinations"
        }, {
          "method_name" : "create",
          "method_on" : "service",
          "method_type" : "create",
          "operation" : "post",
          "path" : "/v2/core/event_destinations"
        }, {
          "method_name" : "delete",
          "method_on" : "service",
          "method_type" : "delete",
          "operation" : "delete",
          "path" : "/v2/core/event_destinations/{id}"
        }, {
          "method_name" : "retrieve",
          "method_on" : "service",
          "method_type" : "retrieve",
          "operation" : "get",
          "path" : "/v2/core/event_destinations/{id}"
        }, {
          "method_name" : "update",
          "method_on" : "service",
          "method_type" : "update",
          "operation" : "post",
          "path" : "/v2/core/event_destinations/{id}"
        }, {
          "method_name" : "disable",
          "method_on" : "service",
          "method_type" : "custom",
          "operation" : "post",
          "path" : "/v2/core/event_destinations/{id}/disable"
        }, {
          "method_name" : "enable",
          "method_on" : "service",
          "method_type" : "custom",
          "operation" : "post",
          "path" : "/v2/core/event_destinations/{id}/enable"
        } ]
      },
      "v2.error.account_controller_express_dash_without_application_losses_or_fees" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "account_controller_express_dash_without_application_losses_or_fees" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "If `dashboard` is `express`, `fees_collector` must be `application` and `losses_collector` must be `application`.",
        "x-stripeError" : {
          "code" : "account_controller_express_dash_without_application_losses_or_fees",
          "httpStatusCode" : 400
        }
      },
      "v2.error.account_controller_stripe_pricing_platform_liable" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "account_controller_stripe_pricing_platform_liable" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "If `losses_collector` is `application`, `fees_collector` must also be `application`.",
        "x-stripeError" : {
          "code" : "account_controller_stripe_pricing_platform_liable",
          "httpStatusCode" : 400
        }
      },
      "v2.error.account_controller_unsupported_configuration" : {
        "required" : [ "code", "doc_url", "invalid_permutation", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "account_controller_unsupported_configuration" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "doc_url" : {
            "type" : "string",
            "description" : "A URL to more information about the error reported"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          },
          "invalid_permutation" : {
            "required" : [ "dashboard", "fees_collector", "losses_collector" ],
            "type" : "object",
            "properties" : {
              "dashboard" : {
                "type" : "string",
                "description" : "The value provided for the dashboard field."
              },
              "fees_collector" : {
                "type" : "string",
                "description" : "The value provided for the fees_collector field."
              },
              "losses_collector" : {
                "type" : "string",
                "description" : "The value provided for the losses_collector field."
              }
            },
            "description" : "The invalid permutation provided."
          }
        },
        "description" : "Connect integration combination is not supported.",
        "x-stripeError" : {
          "code" : "account_controller_unsupported_configuration",
          "httpStatusCode" : 400
        }
      },
      "v2.error.account_controller_unsupported_configuration_private_preview" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "account_controller_unsupported_configuration_private_preview" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Responsibility combinations is not supported in private preview.",
        "x-stripeError" : {
          "code" : "account_controller_unsupported_configuration_private_preview",
          "httpStatusCode" : 400
        }
      },
      "v2.error.account_country_unsupported_currency" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "account_country_unsupported_currency" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Currency is not allowed for the account's country.",
        "x-stripeError" : {
          "code" : "account_country_unsupported_currency",
          "httpStatusCode" : 400
        }
      },
      "v2.error.account_create_activation_required" : {
        "required" : [ "code", "doc_url", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "account_create_activation_required" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "doc_url" : {
            "type" : "string",
            "description" : "A URL to more information about the error reported"
          }
        },
        "description" : "Platform must be activated to create connected accounts.",
        "x-stripeError" : {
          "code" : "account_create_activation_required",
          "httpStatusCode" : 400
        }
      },
      "v2.error.account_creation_invalid" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "account_creation_invalid" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Account creation is invalid.",
        "x-stripeError" : {
          "code" : "account_creation_invalid",
          "httpStatusCode" : 400
        }
      },
      "v2.error.additional_legal_guardian_not_allowed" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "additional_legal_guardian_not_allowed" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "More than one legal guardian is added to an account.",
        "x-stripeError" : {
          "code" : "additional_legal_guardian_not_allowed",
          "httpStatusCode" : 400
        }
      },
      "v2.error.additional_representative_not_allowed" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "additional_representative_not_allowed" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "More than one representative is added to an account.",
        "x-stripeError" : {
          "code" : "additional_representative_not_allowed",
          "httpStatusCode" : 400
        }
      },
      "v2.error.additional_tos_only_allowed_for_legal_guardian" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "additional_tos_only_allowed_for_legal_guardian" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Additional terms of service are signed by someone other than the legal guardian.",
        "x-stripeError" : {
          "code" : "additional_tos_only_allowed_for_legal_guardian",
          "httpStatusCode" : 400
        }
      },
      "v2.error.address_characters_invalid" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "address_characters_invalid" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Invalid characters are provided for address fields.",
        "x-stripeError" : {
          "code" : "address_characters_invalid",
          "httpStatusCode" : 400
        }
      },
      "v2.error.address_country_identity_country_mismatch" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "address_country_identity_country_mismatch" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Address country doesn't match identity country.",
        "x-stripeError" : {
          "code" : "address_country_identity_country_mismatch",
          "httpStatusCode" : 400
        }
      },
      "v2.error.address_country_mismatch" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "address_country_mismatch" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Registered/script address country doesn't match residential address country.",
        "x-stripeError" : {
          "code" : "address_country_mismatch",
          "httpStatusCode" : 400
        }
      },
      "v2.error.address_country_required" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "address_country_required" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Address country is required but not provided.",
        "x-stripeError" : {
          "code" : "address_country_required",
          "httpStatusCode" : 400
        }
      },
      "v2.error.address_postal_code_invalid" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "address_postal_code_invalid" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Address postal code is invalid.",
        "x-stripeError" : {
          "code" : "address_postal_code_invalid",
          "httpStatusCode" : 400
        }
      },
      "v2.error.address_state_invalid" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "address_state_invalid" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Address state is invalid.",
        "x-stripeError" : {
          "code" : "address_state_invalid",
          "httpStatusCode" : 400
        }
      },
      "v2.error.address_town_invalid" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "address_town_invalid" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Address town is invalid.",
        "x-stripeError" : {
          "code" : "address_town_invalid",
          "httpStatusCode" : 400
        }
      },
      "v2.error.already_exists" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "already_exists" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of error returned",
            "enum" : [ "already_exists" ]
          }
        },
        "description" : "The resource already exists.",
        "x-stripeError" : {
          "code" : "already_exists",
          "type" : "already_exists",
          "httpStatusCode" : 400
        }
      },
      "v2.error.archived_card" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "archived_card" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of error returned",
            "enum" : [ "quota_exceeded" ]
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "User attempts to update an archived card error.",
        "x-stripeError" : {
          "code" : "archived_card",
          "type" : "quota_exceeded",
          "httpStatusCode" : 400
        }
      },
      "v2.error.archived_meter" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "archived_meter" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "The meter must be Active to submit events.",
        "x-stripeError" : {
          "code" : "archived_meter",
          "httpStatusCode" : 400
        }
      },
      "v2.error.archived_us_bank_account" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "archived_us_bank_account" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Returned in cases where the bank account cannot be updated due to being archived.",
        "x-stripeError" : {
          "code" : "archived_us_bank_account",
          "httpStatusCode" : 400
        }
      },
      "v2.error.assignee_compartments_cap_reached" : {
        "required" : [ "code", "email", "max_limit", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "assignee_compartments_cap_reached" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "email" : {
            "type" : "string",
            "description" : "The email address of the user who has reached the max accounts limit."
          },
          "max_limit" : {
            "type" : "string",
            "description" : "The max accounts limit being applied for the user."
          }
        },
        "description" : "This error is thrown when the user to whom roles are being assigned has reached the max accounts limit.",
        "x-stripeError" : {
          "code" : "assignee_compartments_cap_reached",
          "httpStatusCode" : 422
        }
      },
      "v2.error.attach_payment_method_to_customer" : {
        "required" : [ "code", "doc_url", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "attach_payment_method_to_customer" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "doc_url" : {
            "type" : "string",
            "description" : "A URL to more information about the error reported"
          }
        },
        "description" : "Default payment method is added to the customer config before attaching it to the account using `/v1/payment_methods`.",
        "x-stripeError" : {
          "code" : "attach_payment_method_to_customer",
          "httpStatusCode" : 400
        }
      },
      "v2.error.auth_challenge_required_error" : {
        "required" : [ "action", "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "auth_challenge_required_error" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "action" : {
            "type" : "string",
            "description" : "The challenge action."
          },
          "schema" : {
            "type" : "string",
            "description" : "The challenge schema."
          }
        },
        "description" : "The user must perform additional auth challenges before this request can be processed.",
        "x-stripeError" : {
          "code" : "auth_challenge_required_error",
          "httpStatusCode" : 401
        }
      },
      "v2.error.balance_exchange_insufficient_funds" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "balance_exchange_insufficient_funds" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of error returned",
            "enum" : [ "insufficient_funds" ]
          }
        },
        "description" : "",
        "x-stripeError" : {
          "code" : "balance_exchange_insufficient_funds",
          "type" : "insufficient_funds",
          "httpStatusCode" : 400
        }
      },
      "v2.error.balance_exchange_not_allowed" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "balance_exchange_not_allowed" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "",
        "x-stripeError" : {
          "code" : "balance_exchange_not_allowed",
          "httpStatusCode" : 400
        }
      },
      "v2.error.billable_item_not_found" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "billable_item_not_found" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned when the provided billable_item ID cannot be found.",
        "x-stripeError" : {
          "code" : "billable_item_not_found",
          "httpStatusCode" : 404
        }
      },
      "v2.error.billable_item_pricing_missing" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "billable_item_pricing_missing" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned when a new pricing spec will result in a version change on the pricing plan, but the current version is missing a pricing spec for any billable item on its plan config.",
        "x-stripeError" : {
          "code" : "billable_item_pricing_missing",
          "httpStatusCode" : 400
        }
      },
      "v2.error.billing_cadence_active" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "billing_cadence_active" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned when trying to cancel a billing cadence that has active subscriptions.",
        "x-stripeError" : {
          "code" : "billing_cadence_active",
          "httpStatusCode" : 400
        }
      },
      "v2.error.billing_cadence_canceled" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "billing_cadence_canceled" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned when trying to cancel a billing cadence that has already been canceled.",
        "x-stripeError" : {
          "code" : "billing_cadence_canceled",
          "httpStatusCode" : 400
        }
      },
      "v2.error.billing_cadence_not_found" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "billing_cadence_not_found" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned when the provided billing_cadence ID cannot be found.",
        "x-stripeError" : {
          "code" : "billing_cadence_not_found",
          "httpStatusCode" : 404
        }
      },
      "v2.error.billing_meter_event_session_expired" : {
        "required" : [ "code", "doc_url", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "billing_meter_event_session_expired" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of error returned",
            "enum" : [ "temporary_session_expired" ]
          },
          "doc_url" : {
            "type" : "string",
            "description" : "A URL to more information about the error reported"
          }
        },
        "description" : "The temporary session token has expired.",
        "x-stripeError" : {
          "code" : "billing_meter_event_session_expired",
          "type" : "temporary_session_expired",
          "httpStatusCode" : 401
        }
      },
      "v2.error.blocked_card" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "blocked_card" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned in cases where the card cannot be used due to previous suspicious activity.",
        "x-stripeError" : {
          "code" : "blocked_card",
          "httpStatusCode" : 400
        }
      },
      "v2.error.blocked_destination_bank_account" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "blocked_destination_bank_account" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned in cases where the bank account cannot be used due to suspicious activity.",
        "x-stripeError" : {
          "code" : "blocked_destination_bank_account",
          "httpStatusCode" : 400
        }
      },
      "v2.error.blocked_us_bank_account" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "blocked_us_bank_account" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of error returned",
            "enum" : [ "blocked_by_stripe" ]
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Returned in cases where the bank account cannot be used due to suspicious activity.",
        "x-stripeError" : {
          "code" : "blocked_us_bank_account",
          "type" : "blocked_by_stripe",
          "httpStatusCode" : 400
        }
      },
      "v2.error.can_create_platform_owned_onboarding_accounts_required" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "can_create_platform_owned_onboarding_accounts_required" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Dormant accounts cannot create accounts where requirements collector is application (this is an account takeover prevention measure).",
        "x-stripeError" : {
          "code" : "can_create_platform_owned_onboarding_accounts_required",
          "httpStatusCode" : 400
        }
      },
      "v2.error.cannot_create_connected_account" : {
        "required" : [ "code", "doc_url", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "cannot_create_connected_account" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "doc_url" : {
            "type" : "string",
            "description" : "A URL to more information about the error reported"
          }
        },
        "description" : "Platform is in an invalid state and cannot create connected accounts.",
        "x-stripeError" : {
          "code" : "cannot_create_connected_account",
          "httpStatusCode" : 400
        }
      },
      "v2.error.cannot_create_new_account_rejected" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "cannot_create_new_account_rejected" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Platform is in a rejected state and cannot create connected accounts.",
        "x-stripeError" : {
          "code" : "cannot_create_new_account_rejected",
          "httpStatusCode" : 400
        }
      },
      "v2.error.cannot_delete_account_with_balance" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "cannot_delete_account_with_balance" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Account with Merchant or Recipient configuration with transfers feature cannot be closed because the account has a cash balance.",
        "x-stripeError" : {
          "code" : "cannot_delete_account_with_balance",
          "httpStatusCode" : 400
        }
      },
      "v2.error.cannot_delete_customer_with_available_cash_balance" : {
        "required" : [ "code", "doc_url", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "cannot_delete_customer_with_available_cash_balance" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "doc_url" : {
            "type" : "string",
            "description" : "A URL to more information about the error reported"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Account with Customer configuration cannot be closed because the customer has a cash balance.",
        "x-stripeError" : {
          "code" : "cannot_delete_customer_with_available_cash_balance",
          "httpStatusCode" : 400
        }
      },
      "v2.error.cannot_invite_self" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "cannot_invite_self" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "This error is thrown when the logged-in user tries to invite self.",
        "x-stripeError" : {
          "code" : "cannot_invite_self",
          "httpStatusCode" : 400
        }
      },
      "v2.error.cannot_remove_due_to_access_in_sandbox" : {
        "required" : [ "code", "live_account_names", "message", "sandbox_account_names", "user_email", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "cannot_remove_due_to_access_in_sandbox" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          },
          "live_account_names" : {
            "type" : "array",
            "description" : "The name of the livemode accounts that the user is being revoked in.",
            "items" : {
              "type" : "string"
            }
          },
          "sandbox_account_names" : {
            "type" : "array",
            "description" : "The names of the Sandbox accounts that the user has access in.",
            "items" : {
              "type" : "string"
            }
          },
          "user_email" : {
            "type" : "string",
            "description" : "The email of the user who cannot be removed because they are an owner."
          }
        },
        "description" : "This error is thrown when the user being revoked will be left in an inconsistent state\nof having access in Sandbox without livemode access if the revoke goes through.",
        "x-stripeError" : {
          "code" : "cannot_remove_due_to_access_in_sandbox",
          "httpStatusCode" : 400
        }
      },
      "v2.error.cannot_remove_owner" : {
        "required" : [ "account_names", "code", "message", "user_email", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "cannot_remove_owner" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          },
          "account_names" : {
            "type" : "string",
            "description" : "The names of the accounts that they are an owner of."
          },
          "user_email" : {
            "type" : "string",
            "description" : "The email of the user who cannot be removed because they are an owner."
          }
        },
        "description" : "This error is thrown when the user being revoked is an \"owner\" (v1 primary_user) of account(s).",
        "x-stripeError" : {
          "code" : "cannot_remove_owner",
          "httpStatusCode" : 400
        }
      },
      "v2.error.cannot_update_owner" : {
        "required" : [ "account_names", "code", "message", "user_email", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "cannot_update_owner" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          },
          "account_names" : {
            "type" : "string",
            "description" : "The names of the accounts that they are an owner of."
          },
          "user_email" : {
            "type" : "string",
            "description" : "The email of the user who cannot be removed because they are an owner."
          }
        },
        "description" : "This error is thrown when the user being updated is an \"owner\" (v1 primary_user) of account(s).",
        "x-stripeError" : {
          "code" : "cannot_update_owner",
          "httpStatusCode" : 400
        }
      },
      "v2.error.card_address_invalid_country" : {
        "required" : [ "code", "invalid_param", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "card_address_invalid_country" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of error returned",
            "enum" : [ "invalid_payment_method" ]
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          },
          "invalid_param" : {
            "type" : "string",
            "description" : "Open Enum: Request param that is invalid.",
            "enum" : [ "country", "cvc", "exp_date", "exp_month", "exp_year", "number", "postal_code", "state" ]
          }
        },
        "description" : "Card billing address's country field is invalid.",
        "x-stripeError" : {
          "code" : "card_address_invalid_country",
          "type" : "invalid_payment_method",
          "httpStatusCode" : 400
        }
      },
      "v2.error.card_address_invalid_postal_code" : {
        "required" : [ "code", "invalid_param", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "card_address_invalid_postal_code" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of error returned",
            "enum" : [ "invalid_payment_method" ]
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          },
          "invalid_param" : {
            "type" : "string",
            "description" : "Open Enum: Request param that is invalid.",
            "enum" : [ "country", "cvc", "exp_date", "exp_month", "exp_year", "number", "postal_code", "state" ]
          }
        },
        "description" : "Card billing address's postal code field is invalid.",
        "x-stripeError" : {
          "code" : "card_address_invalid_postal_code",
          "type" : "invalid_payment_method",
          "httpStatusCode" : 400
        }
      },
      "v2.error.card_address_invalid_state" : {
        "required" : [ "code", "invalid_param", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "card_address_invalid_state" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of error returned",
            "enum" : [ "invalid_payment_method" ]
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          },
          "invalid_param" : {
            "type" : "string",
            "description" : "Open Enum: Request param that is invalid.",
            "enum" : [ "country", "cvc", "exp_date", "exp_month", "exp_year", "number", "postal_code", "state" ]
          }
        },
        "description" : "Card billing address's state field is invalid.",
        "x-stripeError" : {
          "code" : "card_address_invalid_state",
          "type" : "invalid_payment_method",
          "httpStatusCode" : 400
        }
      },
      "v2.error.card_outbound_supportability_invalid" : {
        "required" : [ "code", "invalid_param", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "card_outbound_supportability_invalid" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of error returned",
            "enum" : [ "invalid_payment_method" ]
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          },
          "invalid_param" : {
            "type" : "string",
            "description" : "Open Enum: Request param that is invalid.",
            "enum" : [ "country", "cvc", "exp_date", "exp_month", "exp_year", "number", "postal_code", "state" ]
          }
        },
        "description" : "If outbound_supported precondition specified, error when the provided card isn’t supported by Stripe for payouts.",
        "x-stripeError" : {
          "code" : "card_outbound_supportability_invalid",
          "type" : "invalid_payment_method",
          "httpStatusCode" : 400
        }
      },
      "v2.error.closing_financial_account_with_non_zero_balances" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "closing_financial_account_with_non_zero_balances" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of error returned",
            "enum" : [ "non_zero_balance" ]
          }
        },
        "description" : "Error thrown if a user tries to close an account that has non-zero balances.",
        "x-stripeError" : {
          "code" : "closing_financial_account_with_non_zero_balances",
          "type" : "non_zero_balance",
          "httpStatusCode" : 400
        }
      },
      "v2.error.configs_must_match_to_close" : {
        "required" : [ "applied_configurations", "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "configs_must_match_to_close" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          },
          "applied_configurations" : {
            "type" : "array",
            "description" : "The applied configurations that should be specified.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Account cannot be closed without specifying the right configurations.",
        "x-stripeError" : {
          "code" : "configs_must_match_to_close",
          "httpStatusCode" : 400
        }
      },
      "v2.error.configuration_creation_invalid" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "configuration_creation_invalid" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Cannot create an account with an invalid configuration.",
        "x-stripeError" : {
          "code" : "configuration_creation_invalid",
          "httpStatusCode" : 400
        }
      },
      "v2.error.connect_identity_not_verified" : {
        "required" : [ "code", "doc_url", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "connect_identity_not_verified" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "doc_url" : {
            "type" : "string",
            "description" : "A URL to more information about the error reported"
          }
        },
        "description" : "Platform is not verified and cannot create connected accounts.",
        "x-stripeError" : {
          "code" : "connect_identity_not_verified",
          "httpStatusCode" : 400
        }
      },
      "v2.error.connect_profile_not_submitted" : {
        "required" : [ "code", "doc_url", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "connect_profile_not_submitted" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "doc_url" : {
            "type" : "string",
            "description" : "A URL to more information about the error reported"
          }
        },
        "description" : "Platform has not completed platform questionnaire and cannot create connected accounts.",
        "x-stripeError" : {
          "code" : "connect_profile_not_submitted",
          "httpStatusCode" : 400
        }
      },
      "v2.error.contract_generation_failure" : {
        "required" : [ "code", "message", "reason" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "contract_generation_failure" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "reason" : {
            "type" : "string",
            "description" : "The reason explaining why contract generation failed."
          }
        },
        "description" : "Error thrown when contract generation fails due to user input (maps to a 400 response code).",
        "x-stripeError" : {
          "code" : "contract_generation_failure",
          "httpStatusCode" : 400
        }
      },
      "v2.error.corgi_busy" : {
        "required" : [ "code", "id", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "corgi_busy" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "id" : {
            "type" : "string",
            "description" : "Support error message formatting"
          }
        },
        "description" : "",
        "x-stripeError" : {
          "code" : "corgi_busy",
          "httpStatusCode" : 400
        }
      },
      "v2.error.custom_account_beta" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "custom_account_beta" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Custom accounts cannot be created in certain countries.",
        "x-stripeError" : {
          "code" : "custom_account_beta",
          "httpStatusCode" : 400
        }
      },
      "v2.error.customer_not_found" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "customer_not_found" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned when the customer for the provided ID cannot be found.",
        "x-stripeError" : {
          "code" : "customer_not_found",
          "httpStatusCode" : 404
        }
      },
      "v2.error.date_of_birth_age_restriction" : {
        "required" : [ "age_limit", "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "date_of_birth_age_restriction" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          },
          "age_limit" : {
            "type" : "string",
            "description" : "Representative age should be greater than or equal to the age_limit."
          }
        },
        "description" : "Representative date of birth does not meet the age limit.",
        "x-stripeError" : {
          "code" : "date_of_birth_age_restriction",
          "httpStatusCode" : 400
        }
      },
      "v2.error.date_of_birth_invalid" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "date_of_birth_invalid" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Representative date of birth is provided an invalid date or a future date.",
        "x-stripeError" : {
          "code" : "date_of_birth_invalid",
          "httpStatusCode" : 400
        }
      },
      "v2.error.default_currency_immutable" : {
        "required" : [ "code", "doc_url", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "default_currency_immutable" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "doc_url" : {
            "type" : "string",
            "description" : "A URL to more information about the error reported"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Cannot change `defaults.currency` post account activation.",
        "x-stripeError" : {
          "code" : "default_currency_immutable",
          "httpStatusCode" : 400
        }
      },
      "v2.error.default_payment_method_invalid" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "default_payment_method_invalid" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Default payment method provided for a customer does not exist or is otherwise invalid.",
        "x-stripeError" : {
          "code" : "default_payment_method_invalid",
          "httpStatusCode" : 400
        }
      },
      "v2.error.default_payment_method_invalid_type" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "default_payment_method_invalid_type" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Specified payment method exists but its type is not allowed to be the default payment method.",
        "x-stripeError" : {
          "code" : "default_payment_method_invalid_type",
          "httpStatusCode" : 400
        }
      },
      "v2.error.destination_bank_account_cannot_be_archived" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "destination_bank_account_cannot_be_archived" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned when the Destination Bank Account in question is controlled by the Stripe Dashboard, and cannot be archived.",
        "x-stripeError" : {
          "code" : "destination_bank_account_cannot_be_archived",
          "httpStatusCode" : 400
        }
      },
      "v2.error.destination_currency_not_supported_for_balance_exchange" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "destination_currency_not_supported_for_balance_exchange" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "",
        "x-stripeError" : {
          "code" : "destination_currency_not_supported_for_balance_exchange",
          "httpStatusCode" : 400
        }
      },
      "v2.error.different_v1_business_profile" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "different_v1_business_profile" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "",
        "x-stripeError" : {
          "code" : "different_v1_business_profile",
          "httpStatusCode" : 400
        }
      },
      "v2.error.different_v1_legal_entity" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "different_v1_legal_entity" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "",
        "x-stripeError" : {
          "code" : "different_v1_legal_entity",
          "httpStatusCode" : 400
        }
      },
      "v2.error.display_name_too_long" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "display_name_too_long" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned when the provided display_name is longer than the maximum length of 100 characters.",
        "x-stripeError" : {
          "code" : "display_name_too_long",
          "httpStatusCode" : 400
        }
      },
      "v2.error.dob_age_restriction" : {
        "required" : [ "age_limit", "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "dob_age_restriction" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          },
          "age_limit" : {
            "type" : "string",
            "description" : "Representative age should be greater than or equal to the age_limit."
          }
        },
        "description" : "Error returned when representative dob does not meet the age limit.",
        "x-stripeError" : {
          "code" : "dob_age_restriction",
          "httpStatusCode" : 400
        }
      },
      "v2.error.dob_invalid" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "dob_invalid" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Error returned when representative dob is provided an invalid date or a future date.",
        "x-stripeError" : {
          "code" : "dob_invalid",
          "httpStatusCode" : 400
        }
      },
      "v2.error.document_invalid" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "document_invalid" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Provided file tokens for documents are invalid, not found, deleted, or belong to a different account.",
        "x-stripeError" : {
          "code" : "document_invalid",
          "httpStatusCode" : 400
        }
      },
      "v2.error.document_purpose_invalid" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "document_purpose_invalid" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Provided file tokens for documents are of the wrong purpose.",
        "x-stripeError" : {
          "code" : "document_purpose_invalid",
          "httpStatusCode" : 400
        }
      },
      "v2.error.duplicate_meter_event" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "duplicate_meter_event" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "A meter event with a duplicate identifier has already been submitted.",
        "x-stripeError" : {
          "code" : "duplicate_meter_event",
          "httpStatusCode" : 400
        }
      },
      "v2.error.duplicate_person_not_allowed" : {
        "required" : [ "code", "duplicate_person_id", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "duplicate_person_not_allowed" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          },
          "duplicate_person_id" : {
            "type" : "string",
            "description" : "The ID of the other person with identical fields."
          }
        },
        "description" : "Duplicate person is added to an account.",
        "x-stripeError" : {
          "code" : "duplicate_person_not_allowed",
          "httpStatusCode" : 400
        }
      },
      "v2.error.email_invalid" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "email_invalid" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Incorrect email is provided.",
        "x-stripeError" : {
          "code" : "email_invalid",
          "httpStatusCode" : 400
        }
      },
      "v2.error.entity_type_not_supported_in_country" : {
        "required" : [ "code", "doc_url", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "entity_type_not_supported_in_country" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "doc_url" : {
            "type" : "string",
            "description" : "A URL to more information about the error reported"
          }
        },
        "description" : "The `identity.entity_type` value is not supported in a given `identity.country`.",
        "x-stripeError" : {
          "code" : "entity_type_not_supported_in_country",
          "httpStatusCode" : 400
        }
      },
      "v2.error.feature_cannot_be_unrequested_due_to_other_feature_requirement" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "feature_cannot_be_unrequested_due_to_other_feature_requirement" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Feature cannot be unrequested due to being a requirement for another feature.",
        "x-stripeError" : {
          "code" : "feature_cannot_be_unrequested_due_to_other_feature_requirement",
          "httpStatusCode" : 400
        }
      },
      "v2.error.feature_not_active_for_balance_exchange" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "feature_not_active_for_balance_exchange" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of error returned",
            "enum" : [ "feature_not_enabled" ]
          }
        },
        "description" : "",
        "x-stripeError" : {
          "code" : "feature_not_active_for_balance_exchange",
          "type" : "feature_not_enabled",
          "httpStatusCode" : 400
        }
      },
      "v2.error.feature_not_available_for_dashboard_type" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "feature_not_available_for_dashboard_type" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Feature cannot be requested for the dashboard type.",
        "x-stripeError" : {
          "code" : "feature_not_available_for_dashboard_type",
          "httpStatusCode" : 400
        }
      },
      "v2.error.feature_not_available_for_entity_type_in_country" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "feature_not_available_for_entity_type_in_country" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Requested feature is not available for the entity type in your country.",
        "x-stripeError" : {
          "code" : "feature_not_available_for_entity_type_in_country",
          "httpStatusCode" : 400
        }
      },
      "v2.error.feature_not_available_in_country" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "feature_not_available_in_country" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Requested feature is not available in your country.",
        "x-stripeError" : {
          "code" : "feature_not_available_in_country",
          "httpStatusCode" : 400
        }
      },
      "v2.error.feature_not_available_in_platform_country" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "feature_not_available_in_platform_country" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Feature cannot be requested given the platform's country.",
        "x-stripeError" : {
          "code" : "feature_not_available_in_platform_country",
          "httpStatusCode" : 400
        }
      },
      "v2.error.feature_not_available_without_other_feature" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "feature_not_available_without_other_feature" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Requested feature is not available without also requesting a different feature.",
        "x-stripeError" : {
          "code" : "feature_not_available_without_other_feature",
          "httpStatusCode" : 400
        }
      },
      "v2.error.feature_not_available_without_other_feature_in_country" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "feature_not_available_without_other_feature_in_country" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Requested feature is not available without also requesting a different feature in your country.",
        "x-stripeError" : {
          "code" : "feature_not_available_without_other_feature_in_country",
          "httpStatusCode" : 400
        }
      },
      "v2.error.financial_account_balance_does_not_support_currency" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "financial_account_balance_does_not_support_currency" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "",
        "x-stripeError" : {
          "code" : "financial_account_balance_does_not_support_currency",
          "httpStatusCode" : 400
        }
      },
      "v2.error.financial_account_feature_restricted" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "financial_account_feature_restricted" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "",
        "x-stripeError" : {
          "code" : "financial_account_feature_restricted",
          "httpStatusCode" : 400
        }
      },
      "v2.error.financial_account_not_in_open_status" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "financial_account_not_in_open_status" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of error returned",
            "enum" : [ "financial_account_not_open" ]
          }
        },
        "description" : "",
        "x-stripeError" : {
          "code" : "financial_account_not_in_open_status",
          "type" : "financial_account_not_open",
          "httpStatusCode" : 400
        }
      },
      "v2.error.financial_address_invalid_page_token" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "financial_address_invalid_page_token" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "",
        "x-stripeError" : {
          "code" : "financial_address_invalid_page_token",
          "httpStatusCode" : 400
        }
      },
      "v2.error.financial_address_not_active" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "financial_address_not_active" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "",
        "x-stripeError" : {
          "code" : "financial_address_not_active",
          "httpStatusCode" : 400
        }
      },
      "v2.error.financial_addresses_api_only_in_sandbox" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "financial_addresses_api_only_in_sandbox" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "",
        "x-stripeError" : {
          "code" : "financial_addresses_api_only_in_sandbox",
          "httpStatusCode" : 400
        }
      },
      "v2.error.financial_addresses_creation_limit_exceeded" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "financial_addresses_creation_limit_exceeded" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "",
        "x-stripeError" : {
          "code" : "financial_addresses_creation_limit_exceeded",
          "httpStatusCode" : 400
        }
      },
      "v2.error.id_number_invalid" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "id_number_invalid" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Provided ID number is of the wrong format for the given type.",
        "x-stripeError" : {
          "code" : "id_number_invalid",
          "httpStatusCode" : 400
        }
      },
      "v2.error.idempotency_conflict" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "idempotency_conflict" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "An idempotent retry results in resource conflicts.",
        "x-stripeError" : {
          "code" : "idempotency_conflict",
          "httpStatusCode" : 409
        }
      },
      "v2.error.idempotency_error" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "idempotency_error" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "An idempotent retry occurred with different request parameters.",
        "x-stripeError" : {
          "code" : "idempotency_error",
          "httpStatusCode" : 409
        }
      },
      "v2.error.identity_country_required" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "identity_country_required" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "The `identity.country` value is required but not provided.",
        "x-stripeError" : {
          "code" : "identity_country_required",
          "httpStatusCode" : 400
        }
      },
      "v2.error.immutable_identity_param" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "immutable_identity_param" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Identity param has been made immutable due to the state of the account.",
        "x-stripeError" : {
          "code" : "immutable_identity_param",
          "httpStatusCode" : 400
        }
      },
      "v2.error.inbound_transfer_from_payment_method_not_found" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "inbound_transfer_from_payment_method_not_found" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned when a PaymentMethod cannot be found.",
        "x-stripeError" : {
          "code" : "inbound_transfer_from_payment_method_not_found",
          "httpStatusCode" : 404
        }
      },
      "v2.error.inbound_transfer_from_payment_method_type_unsupported" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "inbound_transfer_from_payment_method_type_unsupported" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned when a valid, but unsupported PaymentMethod for InboundTransfers is provided.",
        "x-stripeError" : {
          "code" : "inbound_transfer_from_payment_method_type_unsupported",
          "httpStatusCode" : 400
        }
      },
      "v2.error.inbound_transfer_from_payment_method_unverified" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "inbound_transfer_from_payment_method_unverified" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned when a PaymentMethod that has not been verified, is provided.",
        "x-stripeError" : {
          "code" : "inbound_transfer_from_payment_method_unverified",
          "httpStatusCode" : 400
        }
      },
      "v2.error.inbound_transfer_not_allowed" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "inbound_transfer_not_allowed" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of error returned",
            "enum" : [ "blocked_by_stripe" ]
          }
        },
        "description" : "Returned if an InboundTransfer is not allowed for risk, legal, regulatory or other unforeseen reasons.",
        "x-stripeError" : {
          "code" : "inbound_transfer_not_allowed",
          "type" : "blocked_by_stripe",
          "httpStatusCode" : 400
        }
      },
      "v2.error.inbound_transfer_to_financial_account_not_found" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "inbound_transfer_to_financial_account_not_found" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned when a FinancialAccount cannot be found.",
        "x-stripeError" : {
          "code" : "inbound_transfer_to_financial_account_not_found",
          "httpStatusCode" : 404
        }
      },
      "v2.error.incorrect_id_number_for_country" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "incorrect_id_number_for_country" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Incorrect ID number is provided for a country.",
        "x-stripeError" : {
          "code" : "incorrect_id_number_for_country",
          "httpStatusCode" : 400
        }
      },
      "v2.error.individual_additional_person_not_allowed" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "individual_additional_person_not_allowed" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Additional person is added for an individual business type.",
        "x-stripeError" : {
          "code" : "individual_additional_person_not_allowed",
          "httpStatusCode" : 400
        }
      },
      "v2.error.invalid_billing_cadence_filters" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "invalid_billing_cadence_filters" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned when incorrect filters are set when retrieving billing cadences.",
        "x-stripeError" : {
          "code" : "invalid_billing_cadence_filters",
          "httpStatusCode" : 400
        }
      },
      "v2.error.invalid_billing_cycle_dates" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "invalid_billing_cycle_dates" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned by billing candences when invalid dates for a billing cycle are set.",
        "x-stripeError" : {
          "code" : "invalid_billing_cycle_dates",
          "httpStatusCode" : 400
        }
      },
      "v2.error.invalid_business_profile" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "invalid_business_profile" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "",
        "x-stripeError" : {
          "code" : "invalid_business_profile",
          "httpStatusCode" : 400
        }
      },
      "v2.error.invalid_cancel_configuration" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "invalid_cancel_configuration" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "The adjustment configuration is invalid for the adjustment type.",
        "x-stripeError" : {
          "code" : "invalid_cancel_configuration",
          "httpStatusCode" : 400
        }
      },
      "v2.error.invalid_card" : {
        "required" : [ "code", "invalid_param", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "invalid_card" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of error returned",
            "enum" : [ "invalid_payment_method" ]
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          },
          "invalid_param" : {
            "type" : "string",
            "description" : "Open Enum: Request param that is invalid.",
            "enum" : [ "country", "cvc", "exp_date", "exp_month", "exp_year", "number", "postal_code", "state" ]
          }
        },
        "description" : "",
        "x-stripeError" : {
          "code" : "invalid_card",
          "type" : "invalid_payment_method",
          "httpStatusCode" : 400
        }
      },
      "v2.error.invalid_closure_state" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "invalid_closure_state" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "The compartment is in an invalid state and cannot be closed.",
        "x-stripeError" : {
          "code" : "invalid_closure_state",
          "httpStatusCode" : 400
        }
      },
      "v2.error.invalid_country_code" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "invalid_country_code" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned in cases where the country code requested for the bank account spec is invalid.",
        "x-stripeError" : {
          "code" : "invalid_country_code",
          "httpStatusCode" : 400
        }
      },
      "v2.error.invalid_destination_bank_account" : {
        "required" : [ "code", "invalid_param", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "invalid_destination_bank_account" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "invalid_param" : {
            "type" : "string",
            "description" : "Closed Enum. The invalid parameter field.",
            "enum" : [ "account_number", "branch_number", "routing_number", "swift_code" ]
          }
        },
        "description" : "Returned in cases where the destination bank account provided is not valid (wrong format of\ncredentials that does not correspond to a banking institution).",
        "x-stripeError" : {
          "code" : "invalid_destination_bank_account",
          "httpStatusCode" : 400
        }
      },
      "v2.error.invalid_fields" : {
        "required" : [ "code", "flag_set_id", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "invalid_fields" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "flag_set_id" : {
            "type" : "string"
          }
        },
        "description" : "",
        "x-stripeError" : {
          "code" : "invalid_fields",
          "httpStatusCode" : 400
        }
      },
      "v2.error.invalid_id_number_for_structure" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "invalid_id_number_for_structure" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "ID number is provided that is not permitted for the Identity's entity type and business structure.",
        "x-stripeError" : {
          "code" : "invalid_id_number_for_structure",
          "httpStatusCode" : 400
        }
      },
      "v2.error.invalid_id_number_registrar" : {
        "required" : [ "code", "doc_url", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "invalid_id_number_registrar" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "doc_url" : {
            "type" : "string",
            "description" : "A URL to more information about the error reported"
          }
        },
        "description" : "The `identity.business_details.id_numbers.registrar` value is an invalid DE registrar.",
        "x-stripeError" : {
          "code" : "invalid_id_number_registrar",
          "httpStatusCode" : 400
        }
      },
      "v2.error.invalid_legal_entity" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "invalid_legal_entity" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "",
        "x-stripeError" : {
          "code" : "invalid_legal_entity",
          "httpStatusCode" : 400
        }
      },
      "v2.error.invalid_outbound_destination" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "invalid_outbound_destination" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned in cases where the ID provided doesn't correspond to an outbound destination.",
        "x-stripeError" : {
          "code" : "invalid_outbound_destination",
          "httpStatusCode" : 400
        }
      },
      "v2.error.invalid_preference_error" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "invalid_preference_error" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "This error is thrown when the user has not defined the preference id that they want to set.",
        "x-stripeError" : {
          "code" : "invalid_preference_error",
          "httpStatusCode" : 400
        }
      },
      "v2.error.invalid_rate_card_subscription_status_for_cancel" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "invalid_rate_card_subscription_status_for_cancel" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned when the Cancel RateCardSubscription RPC is called\nwith a status=canceled RateCardSubscription.",
        "x-stripeError" : {
          "code" : "invalid_rate_card_subscription_status_for_cancel",
          "httpStatusCode" : 400
        }
      },
      "v2.error.invalid_rate_card_subscription_status_for_update" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "invalid_rate_card_subscription_status_for_update" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned when the Update RateCardSubscription RPC is called\nwith a status=canceled RateCardSubscription.",
        "x-stripeError" : {
          "code" : "invalid_rate_card_subscription_status_for_update",
          "httpStatusCode" : 400
        }
      },
      "v2.error.invalid_test_clock_on_payer" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "invalid_test_clock_on_payer" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned when the payer that is being updated on a billing cadence has a test_clock that conflicts with the current test_clock.",
        "x-stripeError" : {
          "code" : "invalid_test_clock_on_payer",
          "httpStatusCode" : 400
        }
      },
      "v2.error.invalid_us_bank_account" : {
        "required" : [ "code", "invalid_param", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "invalid_us_bank_account" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of error returned",
            "enum" : [ "invalid_payment_method" ]
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          },
          "invalid_param" : {
            "type" : "string",
            "enum" : [ "account_number", "fedwire_routing_number", "routing_number" ]
          }
        },
        "description" : "Returned in cases where the bank account provided is not valid (wrong format of account number\nor a routing number that does not correspond to a banking institution).",
        "x-stripeError" : {
          "code" : "invalid_us_bank_account",
          "type" : "invalid_payment_method",
          "httpStatusCode" : 400
        }
      },
      "v2.error.invoice_rendering_template_invalid" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "invoice_rendering_template_invalid" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Invoice rendering template does not exist or is otherwise invalid.",
        "x-stripeError" : {
          "code" : "invoice_rendering_template_invalid",
          "httpStatusCode" : 400
        }
      },
      "v2.error.ip_address_invalid" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "ip_address_invalid" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Invalid IP address is provided.",
        "x-stripeError" : {
          "code" : "ip_address_invalid",
          "httpStatusCode" : 400
        }
      },
      "v2.error.legal_guardian_representative_not_allowed" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "legal_guardian_representative_not_allowed" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Person is designated as both legal guardian and representative.",
        "x-stripeError" : {
          "code" : "legal_guardian_representative_not_allowed",
          "httpStatusCode" : 400
        }
      },
      "v2.error.legal_guardian_requires_existing_representative" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "legal_guardian_requires_existing_representative" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "A legal guardian may not be added to the account without an existing representative.",
        "x-stripeError" : {
          "code" : "legal_guardian_requires_existing_representative",
          "httpStatusCode" : 400
        }
      },
      "v2.error.limit_card" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "limit_card" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of error returned",
            "enum" : [ "quota_exceeded" ]
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "",
        "x-stripeError" : {
          "code" : "limit_card",
          "type" : "quota_exceeded",
          "httpStatusCode" : 400
        }
      },
      "v2.error.limit_destination_bank_account" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "limit_destination_bank_account" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned when the number of bank account objects on a given V2 Account has exceeded the limit of 10.\nBank Account objects may be archived with /archive, at which point they will not count against the limit.\nIf you are not passing a V2 Account ID in the Stripe-Context header you may receive this error since\nyou are creating all your bank account objects in your own workspace.",
        "x-stripeError" : {
          "code" : "limit_destination_bank_account",
          "httpStatusCode" : 400
        }
      },
      "v2.error.limit_us_bank_account" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "limit_us_bank_account" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of error returned",
            "enum" : [ "quota_exceeded" ]
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Returned when the number of UsBankAccount objects on a given V2 Account has exceeded the limit of 10.\nUsBankAccount objects may be deactivated with /deactivate, at which point they will not count against the limit.\nIf you are not passing a V2 Account ID in the Stripe-Context header you may receive this error since\nyou are creating all your UsBankAccount objects in your own workspace.",
        "x-stripeError" : {
          "code" : "limit_us_bank_account",
          "type" : "quota_exceeded",
          "httpStatusCode" : 400
        }
      },
      "v2.error.llama_name_unexpected_error" : {
        "required" : [ "code", "doc_url", "message", "reason" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "llama_name_unexpected_error" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of error returned",
            "enum" : [ "cannot_proceed" ]
          },
          "doc_url" : {
            "type" : "string",
            "description" : "A URL to more information about the error reported"
          },
          "reason" : {
            "type" : "string"
          }
        },
        "description" : "Error message for invalid Llama names.",
        "x-stripeError" : {
          "code" : "llama_name_unexpected_error",
          "type" : "cannot_proceed",
          "httpStatusCode" : 400
        }
      },
      "v2.error.max_sandboxes_created" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "max_sandboxes_created" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "An error occurred while creating a sandbox -- the limit for sandboxes under a playground has been hit.",
        "x-stripeError" : {
          "code" : "max_sandboxes_created",
          "httpStatusCode" : 400
        }
      },
      "v2.error.mcc_invalid" : {
        "required" : [ "code", "doc_url", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "mcc_invalid" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "doc_url" : {
            "type" : "string",
            "description" : "A URL to more information about the error reported"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "MCC is invalid for `configuration.merchant.mcc`.",
        "x-stripeError" : {
          "code" : "mcc_invalid",
          "httpStatusCode" : 400
        }
      },
      "v2.error.meter_not_found" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "meter_not_found" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned when the provided meter ID cannot be found.",
        "x-stripeError" : {
          "code" : "meter_not_found",
          "httpStatusCode" : 404
        }
      },
      "v2.error.multi_parameters_exclusive" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "multi_parameters_exclusive" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Multiple exclusive parameters were provided in the request.",
        "x-stripeError" : {
          "code" : "multi_parameters_exclusive",
          "httpStatusCode" : 400
        }
      },
      "v2.error.need_access_in_livemode" : {
        "required" : [ "code", "livemode_compartment_id", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "need_access_in_livemode" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          },
          "livemode_compartment_id" : {
            "type" : "string",
            "description" : "The ID of the nearest livemode parent where they need access."
          }
        },
        "description" : "This error is thrown when the user being revoked is an \"owner\" (v1 primary_user) of account(s).",
        "x-stripeError" : {
          "code" : "need_access_in_livemode",
          "httpStatusCode" : 400
        }
      },
      "v2.error.no_merchant_found_for_compartment" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "no_merchant_found_for_compartment" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned when the merchant ID cannot be determined for this workspace.",
        "x-stripeError" : {
          "code" : "no_merchant_found_for_compartment",
          "httpStatusCode" : 404
        }
      },
      "v2.error.no_meter" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "no_meter" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "A meter must exist to submit events.",
        "x-stripeError" : {
          "code" : "no_meter",
          "httpStatusCode" : 400
        }
      },
      "v2.error.non_jp_kana_kanji_address" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "non_jp_kana_kanji_address" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Kana Kanji script addresses must have JP country.",
        "x-stripeError" : {
          "code" : "non_jp_kana_kanji_address",
          "httpStatusCode" : 400
        }
      },
      "v2.error.not_found" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "not_found" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "The resource wasn't found.",
        "x-stripeError" : {
          "code" : "not_found",
          "httpStatusCode" : 404
        }
      },
      "v2.error.notifications_srv_auth_challenge_failed" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "notifications_srv_auth_challenge_failed" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "This error is thrown when EnsureAuthChallenge returns false.",
        "x-stripeError" : {
          "code" : "notifications_srv_auth_challenge_failed",
          "httpStatusCode" : 400
        }
      },
      "v2.error.org_remove_workspace_auth_challenge_failed" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "org_remove_workspace_auth_challenge_failed" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "This error is thrown when EnsureAuthChallenge returns false for RemoveWorkspaceParent.",
        "x-stripeError" : {
          "code" : "org_remove_workspace_auth_challenge_failed",
          "httpStatusCode" : 400
        }
      },
      "v2.error.outbound_payment_account_not_configured_as_recipient" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "outbound_payment_account_not_configured_as_recipient" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Error returned when the recipient account in the OutboundPayment request is not configured as a recipient.",
        "x-stripeError" : {
          "code" : "outbound_payment_account_not_configured_as_recipient",
          "httpStatusCode" : 400
        }
      },
      "v2.error.outbound_payment_already_canceled" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "outbound_payment_already_canceled" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of error returned",
            "enum" : [ "already_canceled" ]
          }
        },
        "description" : "Error returned when user tries to cancel an OutboundPayment that was already canceled.",
        "x-stripeError" : {
          "code" : "outbound_payment_already_canceled",
          "type" : "already_canceled",
          "httpStatusCode" : 400
        }
      },
      "v2.error.outbound_payment_amount_too_large_for_destination" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "outbound_payment_amount_too_large_for_destination" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Error returned when the specified amount exceeds the destination's amount limits.",
        "x-stripeError" : {
          "code" : "outbound_payment_amount_too_large_for_destination",
          "httpStatusCode" : 400
        }
      },
      "v2.error.outbound_payment_amount_too_large_for_selected_method" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "outbound_payment_amount_too_large_for_selected_method" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Error returned when user selected a method but the specified amount exceeds the method limits.",
        "x-stripeError" : {
          "code" : "outbound_payment_amount_too_large_for_selected_method",
          "httpStatusCode" : 400
        }
      },
      "v2.error.outbound_payment_card_destination_not_supported" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "outbound_payment_card_destination_not_supported" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Error returned when the provided Card destination is not eligible for outbound payment.",
        "x-stripeError" : {
          "code" : "outbound_payment_card_destination_not_supported",
          "httpStatusCode" : 400
        }
      },
      "v2.error.outbound_payment_cop_not_accepted" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "outbound_payment_cop_not_accepted" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Error returned when the Confirmation of Payee is not accepted.",
        "x-stripeError" : {
          "code" : "outbound_payment_cop_not_accepted",
          "httpStatusCode" : 400
        }
      },
      "v2.error.outbound_payment_default_destination_config_not_found" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "outbound_payment_default_destination_config_not_found" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Error returned when a destination is not provided in the OutboundPayment request and the recipient account does not have a default destination.",
        "x-stripeError" : {
          "code" : "outbound_payment_default_destination_config_not_found",
          "httpStatusCode" : 400
        }
      },
      "v2.error.outbound_payment_from_balance_type_not_found" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "outbound_payment_from_balance_type_not_found" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Deprecated. Error returned when balance type of provided financial account in the OutboundPayment request cannot be identified.",
        "x-stripeError" : {
          "code" : "outbound_payment_from_balance_type_not_found",
          "httpStatusCode" : 404
        }
      },
      "v2.error.outbound_payment_from_balance_unsupported_currency" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "outbound_payment_from_balance_unsupported_currency" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Error returned when the balance type in the OutboundPayment request does not support the provided currency.",
        "x-stripeError" : {
          "code" : "outbound_payment_from_balance_unsupported_currency",
          "httpStatusCode" : 400
        }
      },
      "v2.error.outbound_payment_from_financial_account_not_found" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "outbound_payment_from_financial_account_not_found" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Error returned when financial account in the OutboundPayment request cannot be identified.",
        "x-stripeError" : {
          "code" : "outbound_payment_from_financial_account_not_found",
          "httpStatusCode" : 404
        }
      },
      "v2.error.outbound_payment_insufficient_funds" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "outbound_payment_insufficient_funds" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of error returned",
            "enum" : [ "insufficient_funds" ]
          }
        },
        "description" : "Error returned when the balance of provided financial account and balance type in the OutboundPayment request does not have enough funds.",
        "x-stripeError" : {
          "code" : "outbound_payment_insufficient_funds",
          "type" : "insufficient_funds",
          "httpStatusCode" : 400
        }
      },
      "v2.error.outbound_payment_invalid_page_token" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "outbound_payment_invalid_page_token" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Error returned when the page token provided in the OutboundPayments list request is invalid.",
        "x-stripeError" : {
          "code" : "outbound_payment_invalid_page_token",
          "httpStatusCode" : 400
        }
      },
      "v2.error.outbound_payment_invalid_to_destination" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "outbound_payment_invalid_to_destination" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Error returned when the destination in the OutboundPayment request cannot be identified.",
        "x-stripeError" : {
          "code" : "outbound_payment_invalid_to_destination",
          "httpStatusCode" : 404
        }
      },
      "v2.error.outbound_payment_invalid_to_destination_country" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "outbound_payment_invalid_to_destination_country" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Error returned when the destination payment method country does not match the destination account country.",
        "x-stripeError" : {
          "code" : "outbound_payment_invalid_to_destination_country",
          "httpStatusCode" : 400
        }
      },
      "v2.error.outbound_payment_method_not_supported" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "outbound_payment_method_not_supported" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Error returned when the selected method is not supported for the destination.",
        "x-stripeError" : {
          "code" : "outbound_payment_method_not_supported",
          "httpStatusCode" : 400
        }
      },
      "v2.error.outbound_payment_no_suitable_methods_for_large_amount" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "outbound_payment_no_suitable_methods_for_large_amount" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Error returned when user does not specify the method or provides automatic, and the amount exceeds all the possible methods for this destination allows.",
        "x-stripeError" : {
          "code" : "outbound_payment_no_suitable_methods_for_large_amount",
          "httpStatusCode" : 400
        }
      },
      "v2.error.outbound_payment_not_allowed" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "outbound_payment_not_allowed" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Error returned when the user is not allowed to make this OutboundPayment request.",
        "x-stripeError" : {
          "code" : "outbound_payment_not_allowed",
          "httpStatusCode" : 400
        }
      },
      "v2.error.outbound_payment_not_cancelable" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "outbound_payment_not_cancelable" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of error returned",
            "enum" : [ "not_cancelable" ]
          }
        },
        "description" : "Error returned when user tries to cancel an OutboundPayment that is not cancelable.",
        "x-stripeError" : {
          "code" : "outbound_payment_not_cancelable",
          "type" : "not_cancelable",
          "httpStatusCode" : 400
        }
      },
      "v2.error.outbound_payment_recipient_amount_limit_exceeded" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "outbound_payment_recipient_amount_limit_exceeded" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of error returned",
            "enum" : [ "quota_exceeded" ]
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Error returned when the recipient's recent total amount in outbound payments has exceeded its limit.",
        "x-stripeError" : {
          "code" : "outbound_payment_recipient_amount_limit_exceeded",
          "type" : "quota_exceeded",
          "httpStatusCode" : 400
        }
      },
      "v2.error.outbound_payment_recipient_count_limit_exceeded" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "outbound_payment_recipient_count_limit_exceeded" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of error returned",
            "enum" : [ "quota_exceeded" ]
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Error returned when the recipient's recent outbound payment count has exceeded its limit.",
        "x-stripeError" : {
          "code" : "outbound_payment_recipient_count_limit_exceeded",
          "type" : "quota_exceeded",
          "httpStatusCode" : 400
        }
      },
      "v2.error.outbound_payment_recipient_email_does_not_exist" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "outbound_payment_recipient_email_does_not_exist" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of error returned",
            "enum" : [ "recipient_not_notifiable" ]
          }
        },
        "description" : "Error returned when the user enables notifications in the OutboundPayment request, but an email is not set up on the recipient account.",
        "x-stripeError" : {
          "code" : "outbound_payment_recipient_email_does_not_exist",
          "type" : "recipient_not_notifiable",
          "httpStatusCode" : 400
        }
      },
      "v2.error.outbound_payment_recipient_feature_not_active" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "outbound_payment_recipient_feature_not_active" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of error returned",
            "enum" : [ "feature_not_enabled" ]
          }
        },
        "description" : "Error returned when recipient does not have the active features required to receive funds from this OutboundPayment request.",
        "x-stripeError" : {
          "code" : "outbound_payment_recipient_feature_not_active",
          "type" : "feature_not_enabled",
          "httpStatusCode" : 400
        }
      },
      "v2.error.outbound_payment_recipient_feature_not_active_for_suitable_method" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "outbound_payment_recipient_feature_not_active_for_suitable_method" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Error returned when user does not specify the method or provides automatic, and recipient feature is not active for suitable method.",
        "x-stripeError" : {
          "code" : "outbound_payment_recipient_feature_not_active_for_suitable_method",
          "httpStatusCode" : 400
        }
      },
      "v2.error.outbound_payment_to_destination_expired" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "outbound_payment_to_destination_expired" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Error returned when the provided destination is expired.",
        "x-stripeError" : {
          "code" : "outbound_payment_to_destination_expired",
          "httpStatusCode" : 400
        }
      },
      "v2.error.outbound_payment_to_recipient_not_found" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "outbound_payment_to_recipient_not_found" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Error returned when the recipient account in the OutboundPayment request cannot be identified.",
        "x-stripeError" : {
          "code" : "outbound_payment_to_recipient_not_found",
          "httpStatusCode" : 404
        }
      },
      "v2.error.outbound_payment_unsupported_currency" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "outbound_payment_unsupported_currency" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Error returned when the destination does not support the request's destination currency.",
        "x-stripeError" : {
          "code" : "outbound_payment_unsupported_currency",
          "httpStatusCode" : 400
        }
      },
      "v2.error.outbound_transfer_already_canceled" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "outbound_transfer_already_canceled" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of error returned",
            "enum" : [ "already_canceled" ]
          }
        },
        "description" : "Error returned when user tries to cancel an OutboundTransfer that was already canceled.",
        "x-stripeError" : {
          "code" : "outbound_transfer_already_canceled",
          "type" : "already_canceled",
          "httpStatusCode" : 400
        }
      },
      "v2.error.outbound_transfer_amount_too_large_for_selected_method" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "outbound_transfer_amount_too_large_for_selected_method" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Error returned when user selected a method but the specified amount exceeds the method limits.",
        "x-stripeError" : {
          "code" : "outbound_transfer_amount_too_large_for_selected_method",
          "httpStatusCode" : 400
        }
      },
      "v2.error.outbound_transfer_card_to_destination_unsupported" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "outbound_transfer_card_to_destination_unsupported" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Error returned when the destination in the OutboundTransfer request is a card which is not currently supported.",
        "x-stripeError" : {
          "code" : "outbound_transfer_card_to_destination_unsupported",
          "httpStatusCode" : 400
        }
      },
      "v2.error.outbound_transfer_cop_not_accepted" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "outbound_transfer_cop_not_accepted" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Error returned when the Confirmation of Payee is not accepted.",
        "x-stripeError" : {
          "code" : "outbound_transfer_cop_not_accepted",
          "httpStatusCode" : 400
        }
      },
      "v2.error.outbound_transfer_from_balance_type_not_found" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "outbound_transfer_from_balance_type_not_found" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Error returned when balance type of provided financial account in the OutboundTransfer request cannot be identified.",
        "x-stripeError" : {
          "code" : "outbound_transfer_from_balance_type_not_found",
          "httpStatusCode" : 404
        }
      },
      "v2.error.outbound_transfer_from_balance_unsupported_currency" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "outbound_transfer_from_balance_unsupported_currency" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Error returned when the balance type in the OutboundTransfer request does not support the provided currency.",
        "x-stripeError" : {
          "code" : "outbound_transfer_from_balance_unsupported_currency",
          "httpStatusCode" : 400
        }
      },
      "v2.error.outbound_transfer_from_financial_account_not_found" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "outbound_transfer_from_financial_account_not_found" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Error returned when financial account in the OutboundTransfer request cannot be identified.",
        "x-stripeError" : {
          "code" : "outbound_transfer_from_financial_account_not_found",
          "httpStatusCode" : 404
        }
      },
      "v2.error.outbound_transfer_insufficient_funds" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "outbound_transfer_insufficient_funds" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of error returned",
            "enum" : [ "insufficient_funds" ]
          }
        },
        "description" : "Error returned when the balance of provided financial account and balance type in the OutboundTransfer request does not have enough funds.",
        "x-stripeError" : {
          "code" : "outbound_transfer_insufficient_funds",
          "type" : "insufficient_funds",
          "httpStatusCode" : 400
        }
      },
      "v2.error.outbound_transfer_invalid_page_token" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "outbound_transfer_invalid_page_token" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Error returned when the page token provided in the OutboundTransfers list request is invalid.",
        "x-stripeError" : {
          "code" : "outbound_transfer_invalid_page_token",
          "httpStatusCode" : 400
        }
      },
      "v2.error.outbound_transfer_invalid_to_destination" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "outbound_transfer_invalid_to_destination" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Error returned when the destination in the OutboundTransfer request cannot be identified.",
        "x-stripeError" : {
          "code" : "outbound_transfer_invalid_to_destination",
          "httpStatusCode" : 404
        }
      },
      "v2.error.outbound_transfer_invalid_to_destination_country" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "outbound_transfer_invalid_to_destination_country" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Error returned when the destination payment method country does not match the sender account country.",
        "x-stripeError" : {
          "code" : "outbound_transfer_invalid_to_destination_country",
          "httpStatusCode" : 400
        }
      },
      "v2.error.outbound_transfer_method_not_supported" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "outbound_transfer_method_not_supported" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Error returned when the selected method is not supported for the destination.",
        "x-stripeError" : {
          "code" : "outbound_transfer_method_not_supported",
          "httpStatusCode" : 400
        }
      },
      "v2.error.outbound_transfer_no_suitable_methods_for_large_amount" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "outbound_transfer_no_suitable_methods_for_large_amount" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Error returned when user does not specify the method or provides automatic, and the amount exceeds all the possible methods for this destination allows.",
        "x-stripeError" : {
          "code" : "outbound_transfer_no_suitable_methods_for_large_amount",
          "httpStatusCode" : 400
        }
      },
      "v2.error.outbound_transfer_not_allowed" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "outbound_transfer_not_allowed" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Error returned when the user is not allowed to make this OutboundTransfer request.",
        "x-stripeError" : {
          "code" : "outbound_transfer_not_allowed",
          "httpStatusCode" : 400
        }
      },
      "v2.error.outbound_transfer_not_cancelable" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "outbound_transfer_not_cancelable" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of error returned",
            "enum" : [ "not_cancelable" ]
          }
        },
        "description" : "Error returned when user tries to cancel an OutboundTransfer that is not cancelable.",
        "x-stripeError" : {
          "code" : "outbound_transfer_not_cancelable",
          "type" : "not_cancelable",
          "httpStatusCode" : 400
        }
      },
      "v2.error.outbound_transfer_unsupported_currency" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "outbound_transfer_unsupported_currency" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Error returned when the destination does not support the request's destination currency.",
        "x-stripeError" : {
          "code" : "outbound_transfer_unsupported_currency",
          "httpStatusCode" : 400
        }
      },
      "v2.error.parameter_pair_exclusive" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "parameter_pair_exclusive" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Two mutually exclusive parameters were provided in the request.",
        "x-stripeError" : {
          "code" : "parameter_pair_exclusive",
          "httpStatusCode" : 400
        }
      },
      "v2.error.payer_not_found" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "payer_not_found" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned when the payer for the provided ID cannot be found.",
        "x-stripeError" : {
          "code" : "payer_not_found",
          "httpStatusCode" : 404
        }
      },
      "v2.error.payload_invalid_value" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "payload_invalid_value" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "The value must be a positive integer.",
        "x-stripeError" : {
          "code" : "payload_invalid_value",
          "httpStatusCode" : 400
        }
      },
      "v2.error.payload_no_customer_defined" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "payload_no_customer_defined" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "The payload must have a reference to the customer.",
        "x-stripeError" : {
          "code" : "payload_no_customer_defined",
          "httpStatusCode" : 400
        }
      },
      "v2.error.payload_no_value_defined" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "payload_no_value_defined" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "The payload must have a value.",
        "x-stripeError" : {
          "code" : "payload_no_value_defined",
          "httpStatusCode" : 400
        }
      },
      "v2.error.pending_transactions_cannot_be_deleted" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "pending_transactions_cannot_be_deleted" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Account cannot be closed due to other pending resources.",
        "x-stripeError" : {
          "code" : "pending_transactions_cannot_be_deleted",
          "httpStatusCode" : 400
        }
      },
      "v2.error.person_percent_ownership_invalid" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "person_percent_ownership_invalid" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Error returned when relationship.owner is set to true but the ownership percentage is set to 0%.",
        "x-stripeError" : {
          "code" : "person_percent_ownership_invalid",
          "httpStatusCode" : 400
        }
      },
      "v2.error.phone_invalid" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "phone_invalid" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Phone number is invalid.",
        "x-stripeError" : {
          "code" : "phone_invalid",
          "httpStatusCode" : 400
        }
      },
      "v2.error.plan_config_lookup_key_not_unique" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "plan_config_lookup_key_not_unique" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned when the lookup_key provided is already used by either a feature or a feature and plan_config.",
        "x-stripeError" : {
          "code" : "plan_config_lookup_key_not_unique",
          "httpStatusCode" : 400
        }
      },
      "v2.error.platform_registration_required" : {
        "required" : [ "code", "doc_url", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "platform_registration_required" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "doc_url" : {
            "type" : "string",
            "description" : "A URL to more information about the error reported"
          }
        },
        "description" : "Platform has not signed up for Connect and cannot create connected accounts.",
        "x-stripeError" : {
          "code" : "platform_registration_required",
          "httpStatusCode" : 400
        }
      },
      "v2.error.price_mismatch_with_rate_card" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "price_mismatch_with_rate_card" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned when the price has fields that don't match those on the rate card. The price must have the same `currency`\nas the rate card, and its `recurring.interval` and `recurring.interval_count` must be the same as the rate card's\n`service_interval` and `service_interval_count`.",
        "x-stripeError" : {
          "code" : "price_mismatch_with_rate_card",
          "httpStatusCode" : 400
        }
      },
      "v2.error.price_not_found" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "price_not_found" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned when the provided price ID cannot be found.",
        "x-stripeError" : {
          "code" : "price_not_found",
          "httpStatusCode" : 404
        }
      },
      "v2.error.product_catalog_unsupported_currency" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "product_catalog_unsupported_currency" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned when the currency provided is not a valid currency.",
        "x-stripeError" : {
          "code" : "product_catalog_unsupported_currency",
          "httpStatusCode" : 400
        }
      },
      "v2.error.product_not_found" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "product_not_found" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned when the provided product ID cannot be found.",
        "x-stripeError" : {
          "code" : "product_not_found",
          "httpStatusCode" : 404
        }
      },
      "v2.error.product_pricing_already_exists" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "product_pricing_already_exists" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned when a product has multiple prices on a rate card.",
        "x-stripeError" : {
          "code" : "product_pricing_already_exists",
          "httpStatusCode" : 400
        }
      },
      "v2.error.quantity_config_not_found" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "quantity_config_not_found" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned when the provided quantity config ID cannot be found.",
        "x-stripeError" : {
          "code" : "quantity_config_not_found",
          "httpStatusCode" : 404
        }
      },
      "v2.error.rate_card_inactive_error" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "rate_card_inactive_error" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned when a user tries to create rate or subscription for an inactive rate card.",
        "x-stripeError" : {
          "code" : "rate_card_inactive_error",
          "httpStatusCode" : 400
        }
      },
      "v2.error.rate_card_not_found" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "rate_card_not_found" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned when the provided rate_card ID cannot be found.",
        "x-stripeError" : {
          "code" : "rate_card_not_found",
          "httpStatusCode" : 404
        }
      },
      "v2.error.rate_card_price_already_exists" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "rate_card_price_already_exists" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned when the price already exists on a rate card.",
        "x-stripeError" : {
          "code" : "rate_card_price_already_exists",
          "httpStatusCode" : 400
        }
      },
      "v2.error.rate_card_price_meter_exists" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "rate_card_price_meter_exists" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned when a new price is set which has a different meter from the original meter set.",
        "x-stripeError" : {
          "code" : "rate_card_price_meter_exists",
          "httpStatusCode" : 400
        }
      },
      "v2.error.rate_card_price_not_recurring" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "rate_card_price_not_recurring" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned when the price is not recurring.",
        "x-stripeError" : {
          "code" : "rate_card_price_not_recurring",
          "httpStatusCode" : 400
        }
      },
      "v2.error.rate_card_rate_not_found" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "rate_card_rate_not_found" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned when the provided rate card rate ID cannot be found.",
        "x-stripeError" : {
          "code" : "rate_card_rate_not_found",
          "httpStatusCode" : 404
        }
      },
      "v2.error.rate_card_subscription_already_exists" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "rate_card_subscription_already_exists" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned when a user tries to create a rate card subscription for a billing cadence that has already subscribed to the same rate card.",
        "x-stripeError" : {
          "code" : "rate_card_subscription_already_exists",
          "httpStatusCode" : 400
        }
      },
      "v2.error.rate_card_subscription_not_found" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "rate_card_subscription_not_found" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned when a RateCardSubscription by the provided ID cannot be found.",
        "x-stripeError" : {
          "code" : "rate_card_subscription_not_found",
          "httpStatusCode" : 404
        }
      },
      "v2.error.rate_card_version_not_found" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "rate_card_version_not_found" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned when the provided rate_card_version ID cannot be found.",
        "x-stripeError" : {
          "code" : "rate_card_version_not_found",
          "httpStatusCode" : 404
        }
      },
      "v2.error.recipient_config_workspace_mismatch" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "recipient_config_workspace_mismatch" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Passed recipient_config ID needs to belong to the Workspace associated with the request’s Stripe-Context.",
        "x-stripeError" : {
          "code" : "recipient_config_workspace_mismatch",
          "httpStatusCode" : 400
        }
      },
      "v2.error.remove_currency_with_balance" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "remove_currency_with_balance" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "",
        "x-stripeError" : {
          "code" : "remove_currency_with_balance",
          "httpStatusCode" : 400
        }
      },
      "v2.error.remove_currency_with_financial_address" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "remove_currency_with_financial_address" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "",
        "x-stripeError" : {
          "code" : "remove_currency_with_financial_address",
          "httpStatusCode" : 400
        }
      },
      "v2.error.role_management_auth_challenge_failed" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "role_management_auth_challenge_failed" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "This error is thrown when EnsureAuthChallenge returns false.",
        "x-stripeError" : {
          "code" : "role_management_auth_challenge_failed",
          "httpStatusCode" : 400
        }
      },
      "v2.error.ruby_llama_name_unexpected_error" : {
        "required" : [ "code", "doc_url", "message", "reason" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "ruby_llama_name_unexpected_error" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of error returned",
            "enum" : [ "cannot_proceed" ]
          },
          "doc_url" : {
            "type" : "string",
            "description" : "A URL to more information about the error reported"
          },
          "reason" : {
            "type" : "string"
          }
        },
        "description" : "Error message for invalid RubyLlama names.",
        "x-stripeError" : {
          "code" : "ruby_llama_name_unexpected_error",
          "type" : "cannot_proceed",
          "httpStatusCode" : 400
        }
      },
      "v2.error.scim_error" : {
        "required" : [ "code", "detail", "message", "schemas", "scim_type", "status" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "scim_error" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of error returned",
            "enum" : [ "scim" ]
          },
          "detail" : {
            "type" : "string",
            "description" : "Scim detail."
          },
          "schemas" : {
            "type" : "array",
            "description" : "Scim schemas.",
            "items" : {
              "type" : "string"
            }
          },
          "scim_type" : {
            "type" : "string",
            "description" : "Scim type."
          },
          "status" : {
            "type" : "string",
            "description" : "Scim status."
          }
        },
        "description" : "Scim Error.",
        "x-stripeError" : {
          "code" : "scim_error",
          "type" : "scim",
          "httpStatusCode" : 400
        }
      },
      "v2.error.script_characters_invalid" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "script_characters_invalid" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Provided script characters are invalid for the script.",
        "x-stripeError" : {
          "code" : "script_characters_invalid",
          "httpStatusCode" : 400
        }
      },
      "v2.error.source_currency_not_supported_for_balance_exchange" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "source_currency_not_supported_for_balance_exchange" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "",
        "x-stripeError" : {
          "code" : "source_currency_not_supported_for_balance_exchange",
          "httpStatusCode" : 400
        }
      },
      "v2.error.sso_domain_validation" : {
        "required" : [ "code", "message", "user_emails", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "sso_domain_validation" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          },
          "user_emails" : {
            "type" : "array",
            "description" : "The email addresses of the user(s) to / for whom \"invite(s) cannot be sent\" / \"role(s) cannot be updated\".",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "This error is thrown when invite / role assignment updates should be restricted due to SSO mandates.",
        "x-stripeError" : {
          "code" : "sso_domain_validation",
          "httpStatusCode" : 400
        }
      },
      "v2.error.statement_descriptor_invalid" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "statement_descriptor_invalid" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Statement descriptor is invalid.",
        "x-stripeError" : {
          "code" : "statement_descriptor_invalid",
          "httpStatusCode" : 400
        }
      },
      "v2.error.stripe_loss_liable_cannot_be_deleted" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "stripe_loss_liable_cannot_be_deleted" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Account with Stripe-owned loss liability and dashboard cannot be deleted.",
        "x-stripeError" : {
          "code" : "stripe_loss_liable_cannot_be_deleted",
          "httpStatusCode" : 400
        }
      },
      "v2.error.structure_incompatible_for_entity_type_country" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "structure_incompatible_for_entity_type_country" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "The `business_details.structure` value is not valid for `identity.country` and `identity.entity_type`.",
        "x-stripeError" : {
          "code" : "structure_incompatible_for_entity_type_country",
          "httpStatusCode" : 400
        }
      },
      "v2.error.test_clock_disallowed_on_live_mode" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "test_clock_disallowed_on_live_mode" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Cannot set a test clock on a livemode customer.",
        "x-stripeError" : {
          "code" : "test_clock_disallowed_on_live_mode",
          "httpStatusCode" : 400
        }
      },
      "v2.error.test_clock_invalid" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "test_clock_invalid" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Test clock does not exist or is otherwise invalid.",
        "x-stripeError" : {
          "code" : "test_clock_invalid",
          "httpStatusCode" : 400
        }
      },
      "v2.error.test_clock_not_found" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "test_clock_not_found" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned when the TestClock for the provided ID cannot be found.",
        "x-stripeError" : {
          "code" : "test_clock_not_found",
          "httpStatusCode" : 404
        }
      },
      "v2.error.test_clocks_advance_in_progress" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "test_clocks_advance_in_progress" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Cannot modify a test clock that is currently advancing.",
        "x-stripeError" : {
          "code" : "test_clocks_advance_in_progress",
          "httpStatusCode" : 400
        }
      },
      "v2.error.test_clocks_customer_limit_reached" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "test_clocks_customer_limit_reached" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Cannot add customer to a test clock that has already reached its customer limit.",
        "x-stripeError" : {
          "code" : "test_clocks_customer_limit_reached",
          "httpStatusCode" : 400
        }
      },
      "v2.error.too_many_active_rate_card_subscriptions" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "too_many_active_rate_card_subscriptions" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned when a user tries to create a rate card subscription for a billing cadence that has already reached the limit of active subscriptions.",
        "x-stripeError" : {
          "code" : "too_many_active_rate_card_subscriptions",
          "httpStatusCode" : 400
        }
      },
      "v2.error.too_many_concurrent_requests" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "too_many_concurrent_requests" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Used to return 409s from the v2 synchronous endpoints in case of mongo write conflicts.\nThis is intentionally not a 429 per the guidance of #api-pattern-review-team.",
        "x-stripeError" : {
          "code" : "too_many_concurrent_requests",
          "httpStatusCode" : 409
        }
      },
      "v2.error.too_many_invitations" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "too_many_invitations" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "This error is thrown when the user is sends too many invites and gets rate limited.",
        "x-stripeError" : {
          "code" : "too_many_invitations",
          "httpStatusCode" : 422
        }
      },
      "v2.error.tos_acceptance_on_behalf_not_allowed" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "tos_acceptance_on_behalf_not_allowed" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "TOS cannot is accepted on behalf of accounts when requirement collection is stripe.",
        "x-stripeError" : {
          "code" : "tos_acceptance_on_behalf_not_allowed",
          "httpStatusCode" : 400
        }
      },
      "v2.error.total_person_ownership_exceeded" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "total_person_ownership_exceeded" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Total ownership percentages of all Persons on the account exceeds 100%.",
        "x-stripeError" : {
          "code" : "total_person_ownership_exceeded",
          "httpStatusCode" : 400
        }
      },
      "v2.error.transactions_search_error" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "transactions_search_error" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "",
        "x-stripeError" : {
          "code" : "transactions_search_error",
          "httpStatusCode" : 400
        }
      },
      "v2.error.unpriced_rate_card" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "unpriced_rate_card" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned when no rates can be found for the given rate card ID and version.",
        "x-stripeError" : {
          "code" : "unpriced_rate_card",
          "httpStatusCode" : 400
        }
      },
      "v2.error.unsupported_currency" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "unsupported_currency" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "",
        "x-stripeError" : {
          "code" : "unsupported_currency",
          "httpStatusCode" : 400
        }
      },
      "v2.error.unsupported_destination_bank" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "unsupported_destination_bank" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned in cases where Stripe is unable to support this bank at this time.",
        "x-stripeError" : {
          "code" : "unsupported_destination_bank",
          "httpStatusCode" : 400
        }
      },
      "v2.error.unsupported_field_for_configs" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "unsupported_field_for_configs" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Cannot set responsibilities on the current configurations.",
        "x-stripeError" : {
          "code" : "unsupported_field_for_configs",
          "httpStatusCode" : 400
        }
      },
      "v2.error.unsupported_identity_field_for_configs" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "unsupported_identity_field_for_configs" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Cannot set identity fields when the Account is only configured as a customer.",
        "x-stripeError" : {
          "code" : "unsupported_identity_field_for_configs",
          "httpStatusCode" : 400
        }
      },
      "v2.error.unsupported_in_version" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "unsupported_in_version" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "The user's request is not supported in their current API version. They must update their API version to use the requested behavior.",
        "x-stripeError" : {
          "code" : "unsupported_in_version",
          "httpStatusCode" : 403
        }
      },
      "v2.error.unsupported_legal_entity_country" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "unsupported_legal_entity_country" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "",
        "x-stripeError" : {
          "code" : "unsupported_legal_entity_country",
          "httpStatusCode" : 400
        }
      },
      "v2.error.unsupported_us_bank" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "unsupported_us_bank" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Returned in cases where Stripe is unable to support this bank at this time.",
        "x-stripeError" : {
          "code" : "unsupported_us_bank",
          "httpStatusCode" : 400
        }
      },
      "v2.error.updating_closed_financial_account" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "updating_closed_financial_account" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "",
        "x-stripeError" : {
          "code" : "updating_closed_financial_account",
          "httpStatusCode" : 400
        }
      },
      "v2.error.updating_features_on_closed_financial_account" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "updating_features_on_closed_financial_account" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Error thrown if a user tries to update features for a closed account.",
        "x-stripeError" : {
          "code" : "updating_features_on_closed_financial_account",
          "httpStatusCode" : 0
        }
      },
      "v2.error.url_invalid" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "url_invalid" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "URL is invalid.",
        "x-stripeError" : {
          "code" : "url_invalid",
          "httpStatusCode" : 400
        }
      },
      "v2.error.us_bank_account_cannot_be_archived" : {
        "required" : [ "code", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "us_bank_account_cannot_be_archived" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of error returned",
            "enum" : [ "controlled_by_dashboard" ]
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          }
        },
        "description" : "Returned when the US Bank Account in question is controlled by the Stripe Dashboard, and cannot be archived.",
        "x-stripeError" : {
          "code" : "us_bank_account_cannot_be_archived",
          "type" : "controlled_by_dashboard",
          "httpStatusCode" : 400
        }
      },
      "v2.error.us_bank_account_confirm_microdeposits_error" : {
        "required" : [ "code", "message", "user_message", "verification_status" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "us_bank_account_confirm_microdeposits_error" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          },
          "verification_status" : {
            "type" : "string",
            "description" : "Closed Enum. The verification status of the bank account associated with this error.",
            "enum" : [ "awaiting_verification", "unverified", "verification_failed", "verified" ]
          }
        },
        "description" : "Returned when the wrong values were provided to confirm microdeposits.",
        "x-stripeError" : {
          "code" : "us_bank_account_confirm_microdeposits_error",
          "httpStatusCode" : 400
        }
      },
      "v2.error.us_bank_account_field_already_exists" : {
        "required" : [ "code", "invalid_field", "message", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "us_bank_account_field_already_exists" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          },
          "invalid_field" : {
            "type" : "string",
            "description" : "Closed Enum. The field that already exists on the resource.",
            "enum" : [ "fedwire_routing_number", "routing_number" ]
          }
        },
        "description" : "Returned in cases where the bank account cannot be updated due to requesting\nto update a field that already exists.",
        "x-stripeError" : {
          "code" : "us_bank_account_field_already_exists",
          "httpStatusCode" : 400
        }
      },
      "v2.error.us_bank_account_microdeposits_not_sent" : {
        "required" : [ "code", "message", "user_message", "verification_status" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "us_bank_account_microdeposits_not_sent" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          },
          "verification_status" : {
            "type" : "string",
            "description" : "Closed Enum. The verification status of the bank account associated with this error.",
            "enum" : [ "awaiting_verification", "unverified", "verification_failed", "verified" ]
          }
        },
        "description" : "Returned when an attempt is made to confirm microdeposits before the microdeposits have been sent.",
        "x-stripeError" : {
          "code" : "us_bank_account_microdeposits_not_sent",
          "httpStatusCode" : 400
        }
      },
      "v2.error.us_bank_account_microdeposits_timed_out" : {
        "required" : [ "code", "message", "user_message", "verification_status" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "us_bank_account_microdeposits_timed_out" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          },
          "verification_status" : {
            "type" : "string",
            "description" : "Closed Enum. The verification status of the bank account associated with this error.",
            "enum" : [ "awaiting_verification", "unverified", "verification_failed", "verified" ]
          }
        },
        "description" : "Returned when an attempt to confirm microdeposits has failed because too much time has elapsed since the\nmicrodeposits were sent.",
        "x-stripeError" : {
          "code" : "us_bank_account_microdeposits_timed_out",
          "httpStatusCode" : 400
        }
      },
      "v2.error.us_bank_account_verification_failed" : {
        "required" : [ "code", "message", "user_message", "verification_status" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "us_bank_account_verification_failed" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          },
          "verification_status" : {
            "type" : "string",
            "description" : "Closed Enum. The verification status of the bank account associated with this error.",
            "enum" : [ "awaiting_verification", "unverified", "verification_failed", "verified" ]
          }
        },
        "description" : "Returned when verification of a US bank account has failed, reaching a terminal failure state.",
        "x-stripeError" : {
          "code" : "us_bank_account_verification_failed",
          "httpStatusCode" : 400
        }
      },
      "v2.error.usage_type_without_meter" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "usage_type_without_meter" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "Returned when the type=usage and no meter is provided.",
        "x-stripeError" : {
          "code" : "usage_type_without_meter",
          "httpStatusCode" : 400
        }
      },
      "v2.error.user_compartments_cap_reached" : {
        "required" : [ "code", "max_limit", "message", "user_id" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "user_compartments_cap_reached" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "max_limit" : {
            "type" : "integer",
            "description" : "The max accounts limit being applied for the user."
          },
          "user_id" : {
            "type" : "string",
            "description" : "The ID of the user who has reached the max accounts limit."
          }
        },
        "description" : "This error is thrown when the user who is trying to gain access to a new account (by redeeming an invite / creating a new account) has reached the max accounts limit.",
        "x-stripeError" : {
          "code" : "user_compartments_cap_reached",
          "httpStatusCode" : 422
        }
      },
      "v2.error.user_emails_invalid" : {
        "required" : [ "code", "message", "user_emails", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "user_emails_invalid" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          },
          "user_emails" : {
            "type" : "array",
            "description" : "The list of invalid \"emails\".",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "This error is thrown when users invite with invalid emails.",
        "x-stripeError" : {
          "code" : "user_emails_invalid",
          "httpStatusCode" : 400
        }
      },
      "v2.error.user_invite_expired" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "user_invite_expired" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "This error is thrown when we try and read or mutate an invite that is expired.",
        "x-stripeError" : {
          "code" : "user_invite_expired",
          "httpStatusCode" : 400
        }
      },
      "v2.error.user_invite_invalid" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "user_invite_invalid" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "This error is thrown when the invite is invalid due to an internal state that we don't want to\nsurface for security reasons.",
        "x-stripeError" : {
          "code" : "user_invite_invalid",
          "httpStatusCode" : 400
        }
      },
      "v2.error.user_invite_redeemed" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "user_invite_redeemed" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "This error is thrown when we try and read or mutate an invite that has already been redeemed.",
        "x-stripeError" : {
          "code" : "user_invite_redeemed",
          "httpStatusCode" : 400
        }
      },
      "v2.error.user_invite_request_unauthenticated" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "user_invite_request_unauthenticated" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "This error is thrown when the acting principal is not authenticated to access the invite.",
        "x-stripeError" : {
          "code" : "user_invite_request_unauthenticated",
          "httpStatusCode" : 403
        }
      },
      "v2.error.users_already_have_access" : {
        "required" : [ "code", "message", "user_emails", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "users_already_have_access" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          },
          "user_emails" : {
            "type" : "array",
            "description" : "The list of emails belonging to users who already have access to the account.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "This error is thrown when users already have access to an account.",
        "x-stripeError" : {
          "code" : "users_already_have_access",
          "httpStatusCode" : 409
        }
      },
      "v2.error.users_already_invited" : {
        "required" : [ "account_name", "code", "message", "user_emails", "user_message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "users_already_invited" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          },
          "user_message" : {
            "type" : "string",
            "description" : "A user-friendly message that can be shown to end-users"
          },
          "account_name" : {
            "type" : "string",
            "description" : "The value of the account name."
          },
          "user_emails" : {
            "type" : "array",
            "description" : "The list of user emails already invited to the account.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "This error is thrown when users have already been invited to an account.",
        "x-stripeError" : {
          "code" : "users_already_invited",
          "httpStatusCode" : 409
        }
      },
      "v2.error.v1_account_instead_of_v2_account" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "v1_account_instead_of_v2_account" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "V1 Account ID cannot be used in V2 Account APIs.",
        "x-stripeError" : {
          "code" : "v1_account_instead_of_v2_account",
          "httpStatusCode" : 400
        }
      },
      "v2.error.v1_customer_instead_of_v2_account" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Short code to identify the error, should not be handled programmatically",
            "enum" : [ "v1_customer_instead_of_v2_account" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable message providing more details about the error"
          }
        },
        "description" : "V1 Customer ID cannot be used in V2 Account APIs.",
        "x-stripeError" : {
          "code" : "v1_customer_instead_of_v2_account",
          "httpStatusCode" : 400
        }
      }
    }
  }
}